<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classPscf_1_1Field">
<title>Pscf::Field&lt; T &gt; Class Template Reference</title>
<indexterm><primary>Pscf::Field&lt; T &gt;</primary></indexterm>
<para>

<para>Base class template for a field defined on a spatial grid. </para>
 
</para>
<para>
<computeroutput>#include &lt;Field.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for Pscf::Field&lt; T &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classPscf_1_1Field.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classPscf_1_1Field_1a1234ba110bf8029e5d14db6429aafb56">Field</link> ()</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><link linkend="_classPscf_1_1Field_1a75f6b080a6921128793ed6dafd5de2d9">Field</link> (<link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; const &amp;other)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; &amp; <link linkend="_classPscf_1_1Field_1a6539f9221bc036cd6f87d20f02634c44">operator=</link> (<link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; const &amp;other)</para>

<para>Assignment operator. </para>
</listitem>
            <listitem><para><link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; &amp; <link linkend="_classPscf_1_1Field_1a699a4d4f888412d7445ec21ebd41d729">operator=</link> (T &amp;scalar)</para>

<para>Assignment - assign all elements to a common scalar. </para>
</listitem>
            <listitem><para><link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; &amp; <link linkend="_classPscf_1_1Field_1ac25f1c5479f9721be0bbf888ff7c7dc3">operator+=</link> (<link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; &amp;other)</para>

<para>Increment operator - add one field by another. </para>
</listitem>
            <listitem><para><link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; &amp; <link linkend="_classPscf_1_1Field_1a28c83792287196c8af10198dac4be6ae">operator-=</link> (<link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; &amp;other)</para>

<para>Decrement operator - subtract one field from another. </para>
</listitem>
            <listitem><para><link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; &amp; <link linkend="_classPscf_1_1Field_1a2fbf86f45368fa003ef832579159f5dc">operator*=</link> (T scalar)</para>

<para>Multiplication operator - multiply one field by a scalar. </para>
</listitem>
            <listitem><para><link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; &amp; <link linkend="_classPscf_1_1Field_1a4fd870ff7123117890068e9702f726d9">operator*=</link> (<link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; &amp;other)</para>

<para>Pointwise multipication of one field by another. </para>
</listitem>
            <listitem><para>void <link linkend="_classPscf_1_1Field_1a55db93e27afe33d040e28c0ba6adf2ef">setToZero</link> ()</para>

<para>Set all elements to zero. </para>
</listitem>
            <listitem><para>T <link linkend="_classPscf_1_1Field_1a2ca56c319df37cad6135ca97e0e49ad7">average</link> () const</para>

<para>Compute and return average of all elements. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename T = double&gt;
class Pscf::Field&lt; T &gt;</title></simplesect>


<para>Base class template for a field defined on a spatial grid. </para>



<para>Derived from DArray&lt;T&gt;, and provides useful arithmetic operations. </para>
<para>
Definition at line 23 of file Field.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classPscf_1_1Field_1a1234ba110bf8029e5d14db6429aafb56"/>    <section>
    <title>Field()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Field</primary><secondary>Pscf::Field&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Field&lt; T &gt;</primary><secondary>Field</secondary></indexterm>
<computeroutput>template&lt;typename T  = double&gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1Field">Pscf::Field</link>&lt; T &gt;::<link linkend="_classPscf_1_1Field">Field</link> ( )</computeroutput></para><para>

<para>Constructor. </para>
</para>
    </section><anchor xml:id="_classPscf_1_1Field_1a75f6b080a6921128793ed6dafd5de2d9"/>    <section>
    <title>Field()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Field</primary><secondary>Pscf::Field&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Field&lt; T &gt;</primary><secondary>Field</secondary></indexterm>
<computeroutput>template&lt;class T &gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1Field">Pscf::Field</link>&lt; T &gt;::<link linkend="_classPscf_1_1Field">Field</link> (<link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; const &amp; other)</computeroutput></para><para>

<para>Copy constructor. </para>
</para>
<para>
Definition at line 98 of file Field.h.</para>
<para>
References Util::Memory::allocate(), Util::Array&lt; double &gt;::capacity_, Util::Array&lt; double &gt;::data_, Util::DArray&lt; double &gt;::isAllocated(), and UTIL_THROW.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classPscf_1_1Field_1a6539f9221bc036cd6f87d20f02634c44"/>    <section>
    <title>operator=()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>Pscf::Field&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Field&lt; T &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;class T &gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; &amp; <link linkend="_classPscf_1_1Field">Pscf::Field</link>&lt; T &gt;::operator= (<link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; const &amp; other)</computeroutput></para><para>

<para>Assignment operator. </para>
</para>
<para>
Definition at line 122 of file Field.h.</para>
<para>
References Util::Array&lt; double &gt;::capacity(), Util::Array&lt; double &gt;::capacity_, Util::DArray&lt; double &gt;::isAllocated(), and UTIL_THROW.</para>
    </section><anchor xml:id="_classPscf_1_1Field_1a699a4d4f888412d7445ec21ebd41d729"/>    <section>
    <title>operator=()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>Pscf::Field&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Field&lt; T &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; &amp; <link linkend="_classPscf_1_1Field">Pscf::Field</link>&lt; T &gt;::operator= (T &amp; scalar)</computeroutput></para><para>

<para>Assignment - assign all elements to a common scalar. </para>
</para>
<para>
Definition at line 150 of file Field.h.</para>
<para>
References UTIL_THROW.</para>
    </section><anchor xml:id="_classPscf_1_1Field_1ac25f1c5479f9721be0bbf888ff7c7dc3"/>    <section>
    <title>operator+=()</title>
<indexterm><primary>operator+=</primary><secondary>Pscf::Field&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Field&lt; T &gt;</primary><secondary>operator+=</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; &amp; <link linkend="_classPscf_1_1Field">Pscf::Field</link>&lt; T &gt;::operator+= (<link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; &amp; other)</computeroutput></para><para>

<para>Increment operator - add one field by another. </para>
</para>
<para>
Definition at line 165 of file Field.h.</para>
<para>
References Util::Array&lt; double &gt;::capacity_, Util::Array&lt; double &gt;::data_, Util::DArray&lt; double &gt;::isAllocated(), and UTIL_THROW.</para>
    </section><anchor xml:id="_classPscf_1_1Field_1a28c83792287196c8af10198dac4be6ae"/>    <section>
    <title>operator-=()</title>
<indexterm><primary>operator-=</primary><secondary>Pscf::Field&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Field&lt; T &gt;</primary><secondary>operator-=</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; &amp; <link linkend="_classPscf_1_1Field">Pscf::Field</link>&lt; T &gt;::operator-= (<link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; &amp; other)</computeroutput></para><para>

<para>Decrement operator - subtract one field from another. </para>
</para>
<para>
Definition at line 186 of file Field.h.</para>
<para>
References Util::Array&lt; double &gt;::capacity_, Util::Array&lt; double &gt;::data_, Util::DArray&lt; double &gt;::isAllocated(), and UTIL_THROW.</para>
    </section><anchor xml:id="_classPscf_1_1Field_1a2fbf86f45368fa003ef832579159f5dc"/>    <section>
    <title>operator*=()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator*=</primary><secondary>Pscf::Field&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Field&lt; T &gt;</primary><secondary>operator*=</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; &amp; <link linkend="_classPscf_1_1Field">Pscf::Field</link>&lt; T &gt;::operator*= (T scalar)</computeroutput></para><para>

<para>Multiplication operator - multiply one field by a scalar. </para>
</para>
<para>
Definition at line 210 of file Field.h.</para>
<para>
References UTIL_THROW.</para>
    </section><anchor xml:id="_classPscf_1_1Field_1a4fd870ff7123117890068e9702f726d9"/>    <section>
    <title>operator*=()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator*=</primary><secondary>Pscf::Field&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Field&lt; T &gt;</primary><secondary>operator*=</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; &amp; <link linkend="_classPscf_1_1Field">Pscf::Field</link>&lt; T &gt;::operator*= (<link linkend="_classPscf_1_1Field">Field</link>&lt; T &gt; &amp; other)</computeroutput></para><para>

<para>Pointwise multipication of one field by another. </para>
</para>
<para>
Definition at line 227 of file Field.h.</para>
<para>
References Util::Array&lt; double &gt;::capacity_, Util::Array&lt; double &gt;::data_, Util::DArray&lt; double &gt;::isAllocated(), and UTIL_THROW.</para>
    </section><anchor xml:id="_classPscf_1_1Field_1a55db93e27afe33d040e28c0ba6adf2ef"/>    <section>
    <title>setToZero()</title>
<indexterm><primary>setToZero</primary><secondary>Pscf::Field&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Field&lt; T &gt;</primary><secondary>setToZero</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>void <link linkend="_classPscf_1_1Field">Pscf::Field</link>&lt; T &gt;::setToZero</computeroutput></para><para>

<para>Set all elements to zero. </para>
</para>
<para>
Definition at line 250 of file Field.h.</para>
    </section><anchor xml:id="_classPscf_1_1Field_1a2ca56c319df37cad6135ca97e0e49ad7"/>    <section>
    <title>average()</title>
<indexterm><primary>average</primary><secondary>Pscf::Field&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Field&lt; T &gt;</primary><secondary>average</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>T <link linkend="_classPscf_1_1Field">Pscf::Field</link>&lt; T &gt;::average</computeroutput></para><para>

<para>Compute and return average of all elements. </para>
</para>
<para>
Definition at line 261 of file Field.h.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
Field.h</section>
</section>
