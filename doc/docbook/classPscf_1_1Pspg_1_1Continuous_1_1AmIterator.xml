<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator">
<title>Pscf::Pspg::Continuous::AmIterator&lt; D &gt; Class Template Reference</title>
<indexterm><primary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</primary></indexterm>
<para>

<para>Anderson mixing iterator for the pseudo spectral method. </para>
 
</para>
<para>
<computeroutput>#include &lt;AmIterator.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for Pscf::Pspg::Continuous::AmIterator&lt; D &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classPscf_1_1Pspg_1_1Continuous_1_1AmIterator.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1af05a058405d20121276a8fccd3a48583">AmIterator</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1aa3d847b04ac9296e75605bc10678697f">AmIterator</link> (<link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1System">System</link>&lt; D &gt; *system)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1a62a9df415adb09ef46bac12aed262a6b">~AmIterator</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para>void <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1adc04d2fd46fcee0916ceea66c0e16c90">readParameters</link> (std::istream &amp;in)</para>

<para>Read all parameters and initialize. </para>
</listitem>
            <listitem><para>void <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1afa438523bca46cc98aa42fb7221db001">allocate</link> ()</para>

<para>Allocate all arrays. </para>
</listitem>
            <listitem><para>int <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1a6ef3c575bf850f1d9db43113d7ddc4f8">solve</link> ()</para>

<para>Iterate to a solution. </para>
</listitem>
            <listitem><para>double <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1a50ac6b19534adc4029a421b83300f3a3">epsilon</link> ()</para>

<para>Getter for epsilon. </para>
</listitem>
            <listitem><para>int <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1a9bf1dbe296103edc96c5cb4a575daac5">maxHist</link> ()</para>

<para>Getter for the maximum number of field histories to convolute into a new field. </para>
</listitem>
            <listitem><para>int <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1a2a25d2e6277e5ad9d843caeaab217737">maxItr</link> ()</para>

<para>Getter for the maximum number of iteration before convergence. </para>
</listitem>
            <listitem><para>void <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1a413c7a0085e91c106c315cee53fefd85">computeDeviation</link> ()</para>

<para>Compute the deviation of wFields from a mean field solution. </para>
</listitem>
            <listitem><para>bool <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1a5fab6e50b2b44f444cc02c777389e31b">isConverged</link> (int itr)</para>

<para>Compute the error from deviations of wFields and compare with epsilon_. </para>
</listitem>
            <listitem><para>int <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1a2ce4ade9f5f2f3216179611d65f846b7">minimizeCoeff</link> (int itr)</para>

<para>Determine the coefficients that would minimize invertMatrix_ Umn. </para>
</listitem>
            <listitem><para>void <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1aa65e0500562b1d529611cb28f5409a33">buildOmega</link> (int itr)</para>

<para>Rebuild wFields for the next iteration from minimized coefficients. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;int D&gt;
class Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</title></simplesect>


<para>Anderson mixing iterator for the pseudo spectral method. </para>
<para>
Definition at line 36 of file pgc/iterator/AmIterator.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1af05a058405d20121276a8fccd3a48583"/>    <section>
    <title>AmIterator()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>AmIterator</primary><secondary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</primary><secondary>AmIterator</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator">Pscf::Pspg::Continuous::AmIterator</link>&lt; D &gt;::<link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator">AmIterator</link></computeroutput></para><para>

<para>Default constructor. </para>
</para>
<para>
Definition at line 28 of file pgc/iterator/AmIterator.tpp.</para>
<para>
References Util::ParamComposite::setClassName().</para>
    </section><anchor xml:id="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1aa3d847b04ac9296e75605bc10678697f"/>    <section>
    <title>AmIterator()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>AmIterator</primary><secondary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</primary><secondary>AmIterator</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator">Pscf::Pspg::Continuous::AmIterator</link>&lt; D &gt;::<link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator">AmIterator</link> (<link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1System">System</link>&lt; D &gt; * system)<computeroutput>[explicit]</computeroutput></computeroutput></para><para>

<para>Constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>system</entry>
                                <entry>
<para>pointer to a system object </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 40 of file pgc/iterator/AmIterator.tpp.</para>
<para>
References Util::ParamComposite::setClassName().</para>
    </section><anchor xml:id="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1a62a9df415adb09ef46bac12aed262a6b"/>    <section>
    <title>~AmIterator()</title>
<indexterm><primary>~AmIterator</primary><secondary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</primary><secondary>~AmIterator</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator">Pscf::Pspg::Continuous::AmIterator</link>&lt; D &gt;::~<link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator">AmIterator</link></computeroutput></para><para>

<para>Destructor. </para>
</para>
<para>
Definition at line 52 of file pgc/iterator/AmIterator.tpp.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1adc04d2fd46fcee0916ceea66c0e16c90"/>    <section>
    <title>readParameters()</title>
<indexterm><primary>readParameters</primary><secondary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</primary><secondary>readParameters</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>void <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator">Pscf::Pspg::Continuous::AmIterator</link>&lt; D &gt;::readParameters (std::istream &amp; in)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Read all parameters and initialize. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in</entry>
                                <entry>
<para>input filestream </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Reimplemented from <link linkend="_classUtil_1_1ParamComposite_1a172a3a656b5829c8d758424ad09a22a6">Util::ParamComposite</link>.</para>
<para>
Definition at line 59 of file pgc/iterator/AmIterator.tpp.</para>
    </section><anchor xml:id="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1afa438523bca46cc98aa42fb7221db001"/>    <section>
    <title>allocate()</title>
<indexterm><primary>allocate</primary><secondary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</primary><secondary>allocate</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>void <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator">Pscf::Pspg::Continuous::AmIterator</link>&lt; D &gt;::allocate</computeroutput></para><para>

<para>Allocate all arrays. </para>
</para>
<para>
Definition at line 69 of file pgc/iterator/AmIterator.tpp.</para>
<para>
References Pscf::Pspg::ThreadGrid::setThreadsLogical().</para>
    </section><anchor xml:id="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1a6ef3c575bf850f1d9db43113d7ddc4f8"/>    <section>
    <title>solve()</title>
<indexterm><primary>solve</primary><secondary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</primary><secondary>solve</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>int <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator">Pscf::Pspg::Continuous::AmIterator</link>&lt; D &gt;::solve<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Iterate to a solution. </para>
</para>
<para>
Implements <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1Iterator_1ac2074acbad8407e1bcb86a7cd83b4019">Pscf::Pspg::Continuous::Iterator&lt; D &gt;</link>.</para>
<para>
Definition at line 118 of file pgc/iterator/AmIterator.tpp.</para>
<para>
References Util::Log::file(), Util::Timer::now(), Util::Timer::start(), Util::Timer::stop(), and Util::Timer::time().</para>
    </section><anchor xml:id="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1a50ac6b19534adc4029a421b83300f3a3"/>    <section>
    <title>epsilon()</title>
<indexterm><primary>epsilon</primary><secondary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</primary><secondary>epsilon</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>double <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator">Pscf::Pspg::Continuous::AmIterator</link>&lt; D &gt;::epsilon<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Getter for epsilon. </para>
</para>
<para>
Definition at line 196 of file pgc/iterator/AmIterator.h.</para>
    </section><anchor xml:id="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1a9bf1dbe296103edc96c5cb4a575daac5"/>    <section>
    <title>maxHist()</title>
<indexterm><primary>maxHist</primary><secondary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</primary><secondary>maxHist</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>int <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator">Pscf::Pspg::Continuous::AmIterator</link>&lt; D &gt;::maxHist<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Getter for the maximum number of field histories to convolute into a new field. </para>
</para>
<para>
Definition at line 202 of file pgc/iterator/AmIterator.h.</para>
    </section><anchor xml:id="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1a2a25d2e6277e5ad9d843caeaab217737"/>    <section>
    <title>maxItr()</title>
<indexterm><primary>maxItr</primary><secondary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</primary><secondary>maxItr</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>int <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator">Pscf::Pspg::Continuous::AmIterator</link>&lt; D &gt;::maxItr<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Getter for the maximum number of iteration before convergence. </para>
</para>
<para>
Definition at line 208 of file pgc/iterator/AmIterator.h.</para>
    </section><anchor xml:id="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1a413c7a0085e91c106c315cee53fefd85"/>    <section>
    <title>computeDeviation()</title>
<indexterm><primary>computeDeviation</primary><secondary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</primary><secondary>computeDeviation</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>void <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator">Pscf::Pspg::Continuous::AmIterator</link>&lt; D &gt;::computeDeviation</computeroutput></para><para>

<para>Compute the deviation of wFields from a mean field solution. </para>
</para>
<para>
Definition at line 343 of file pgc/iterator/AmIterator.tpp.</para>
<para>
References Pscf::Pspg::ThreadGrid::setThreadsLogical().</para>
    </section><anchor xml:id="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1a5fab6e50b2b44f444cc02c777389e31b"/>    <section>
    <title>isConverged()</title>
<indexterm><primary>isConverged</primary><secondary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</primary><secondary>isConverged</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>bool <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator">Pscf::Pspg::Continuous::AmIterator</link>&lt; D &gt;::isConverged (int itr)</computeroutput></para><para>

<para>Compute the error from deviations of wFields and compare with epsilon_. </para>
</para>

<para><formalpara><title>Returns</title>

<para>true for error &lt; epsilon and false for error &gt;= epsilon </para>
</formalpara>
</para>
<para>
Definition at line 523 of file pgc/iterator/AmIterator.tpp.</para>
<para>
References Util::Log::file().</para>
    </section><anchor xml:id="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1a2ce4ade9f5f2f3216179611d65f846b7"/>    <section>
    <title>minimizeCoeff()</title>
<indexterm><primary>minimizeCoeff</primary><secondary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</primary><secondary>minimizeCoeff</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>int <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator">Pscf::Pspg::Continuous::AmIterator</link>&lt; D &gt;::minimizeCoeff (int itr)</computeroutput></para><para>

<para>Determine the coefficients that would minimize invertMatrix_ Umn. </para>
</para>
<para>
Definition at line 586 of file pgc/iterator/AmIterator.tpp.</para>
<para>
References Pscf::LuSolver::allocate(), Pscf::Pspg::RDField&lt; D &gt;::allocate(), Pscf::Pspg::DField&lt; cudaReal &gt;::cDField(), Pscf::LuSolver::computeLU(), Pscf::Pspg::DField&lt; cudaReal &gt;::deallocate(), Pscf::Pspg::ThreadGrid::setThreadsLogical(), and Pscf::LuSolver::solve().</para>
    </section><anchor xml:id="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator_1aa65e0500562b1d529611cb28f5409a33"/>    <section>
    <title>buildOmega()</title>
<indexterm><primary>buildOmega</primary><secondary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::Continuous::AmIterator&lt; D &gt;</primary><secondary>buildOmega</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>void <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1AmIterator">Pscf::Pspg::Continuous::AmIterator</link>&lt; D &gt;::buildOmega (int itr)</computeroutput></para><para>

<para>Rebuild wFields for the next iteration from minimized coefficients. </para>
</para>
<para>
Definition at line 791 of file pgc/iterator/AmIterator.tpp.</para>
<para>
References Pscf::Pspg::ThreadGrid::setThreadsLogical().</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
pgc/iterator/AmIterator.hpgc/iterator/AmIterator.tpp</section>
</section>
