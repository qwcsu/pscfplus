<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classPscf_1_1Pspg_1_1Continuous_1_1Polymer">
<title>Pscf::Pspg::Continuous::Polymer&lt; D &gt; Class Template Reference</title>
<indexterm><primary>Pscf::Pspg::Continuous::Polymer&lt; D &gt;</primary></indexterm>
<para>

<para>Descriptor and solver for a branched polymer species. </para>
 
</para>
<para>
<computeroutput>#include &lt;Polymer.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for Pscf::Pspg::Continuous::Polymer&lt; D &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classPscf_1_1Pspg_1_1Continuous_1_1Polymer.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1Polymer_1a483d070e1374b9b2f743ac946cd2ba41">compute</link> (<link linkend="_classUtil_1_1DArray">DArray</link>&lt; <link linkend="_classPscf_1_1Pspg_1_1RDField">WField</link> &gt; const &amp;wFields)</para>

<para>Compute solution to MDE and concentrations. </para>
</listitem>
            <listitem><para>void <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1Polymer_1a72fbfc1ba61aafc6a80cb42c275ddbff">computeVertex</link> (const <link linkend="_classPscf_1_1Mesh">Mesh</link>&lt; D &gt; &amp;mesh)</para>

<para>Compute vertex density fields. </para>
</listitem>
            <listitem><para>void <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1Polymer_1a5498e3962284b04e2d20721c041808cf">computeStress</link> (<link linkend="_classPscf_1_1Pspg_1_1WaveList">WaveList</link>&lt; D &gt; &amp;wavelist)</para>

<para>Compute stress from a polymer chain, needs a pointer to basis. </para>
</listitem>
            <listitem><para>double <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1Polymer_1a703f4cb83c97bc22bdfff9c659939d5f">stress</link> (int n)</para>

<para>Get derivative of free energy w/ respect to a unit cell parameter. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1Polymer_1a30752567fd7b8b93e5c8476bbe8592c5">setClassName</link> (const char *<link linkend="_classUtil_1_1ParamComposite_1a93e3a9fd3bd01dcc3c606a7bf3112c0e">className</link>)</para>

<para>Set class name string. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;int D&gt;
class Pscf::Pspg::Continuous::Polymer&lt; D &gt;</title></simplesect>


<para>Descriptor and solver for a branched polymer species. </para>



<para>The block concentrations stored in the constituent Block&lt;D&gt; objects contain the block concentrations (i.e., volume fractions) computed in the most recent call of the compute function.</para>

<para>The <link linkend="_classPscf_1_1Species_1a1956df7c7b319005c9f8b6cc274a7dc7">phi()</link> and <link linkend="_classPscf_1_1Species_1acaa3a7b3452b1100290920467bf99a57">mu()</link> accessor functions, which are inherited from PolymerTmp&lt; Block&lt;D&gt; &gt;, return the value of phi (spatial average volume fraction of a species) or mu (chemical potential) computed in the last call of the compute function. If the ensemble for this species is closed, phi is read from the parameter file and mu is computed. If the ensemble is open, mu is read from the parameter file and phi is computed. </para>
<para>
Definition at line 44 of file Polymer.h.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classPscf_1_1Pspg_1_1Continuous_1_1Polymer_1a483d070e1374b9b2f743ac946cd2ba41"/>    <section>
    <title>compute()</title>
<indexterm><primary>compute</primary><secondary>Pscf::Pspg::Continuous::Polymer&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::Continuous::Polymer&lt; D &gt;</primary><secondary>compute</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>void <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1Polymer">Pscf::Pspg::Continuous::Polymer</link>&lt; D &gt;::compute (<link linkend="_classUtil_1_1DArray">DArray</link>&lt; <link linkend="_classPscf_1_1Pspg_1_1RDField">WField</link> &gt; const &amp; wFields)</computeroutput></para><para>

<para>Compute solution to MDE and concentrations. </para>
</para>
<para>
Definition at line 63 of file Polymer.tpp.</para>
    </section><anchor xml:id="_classPscf_1_1Pspg_1_1Continuous_1_1Polymer_1a72fbfc1ba61aafc6a80cb42c275ddbff"/>    <section>
    <title>computeVertex()</title>
<indexterm><primary>computeVertex</primary><secondary>Pscf::Pspg::Continuous::Polymer&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::Continuous::Polymer&lt; D &gt;</primary><secondary>computeVertex</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>void <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1Polymer">Pscf::Pspg::Continuous::Polymer</link>&lt; D &gt;::computeVertex (const <link linkend="_classPscf_1_1Mesh">Mesh</link>&lt; D &gt; &amp; mesh)</computeroutput></para><para>

<para>Compute vertex density fields. </para>
</para>
<para>
Definition at line 132 of file Polymer.tpp.</para>
<para>
References Pscf::Mesh&lt; D &gt;::dimensions(), Pscf::Pspg::ThreadGrid::setThreadsLogical(), and Pscf::Mesh&lt; D &gt;::size().</para>
    </section><anchor xml:id="_classPscf_1_1Pspg_1_1Continuous_1_1Polymer_1a5498e3962284b04e2d20721c041808cf"/>    <section>
    <title>computeStress()</title>
<indexterm><primary>computeStress</primary><secondary>Pscf::Pspg::Continuous::Polymer&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::Continuous::Polymer&lt; D &gt;</primary><secondary>computeStress</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>void <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1Polymer">Pscf::Pspg::Continuous::Polymer</link>&lt; D &gt;::computeStress (<link linkend="_classPscf_1_1Pspg_1_1WaveList">WaveList</link>&lt; D &gt; &amp; wavelist)</computeroutput></para><para>

<para>Compute stress from a polymer chain, needs a pointer to basis. </para>
</para>
<para>
Definition at line 183 of file Polymer.tpp.</para>
    </section><anchor xml:id="_classPscf_1_1Pspg_1_1Continuous_1_1Polymer_1a703f4cb83c97bc22bdfff9c659939d5f"/>    <section>
    <title>stress()</title>
<indexterm><primary>stress</primary><secondary>Pscf::Pspg::Continuous::Polymer&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::Continuous::Polymer&lt; D &gt;</primary><secondary>stress</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>cudaReal <link linkend="_classPscf_1_1Pspg_1_1Continuous_1_1Polymer">Pscf::Pspg::Continuous::Polymer</link>&lt; D &gt;::stress (int n)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Get derivative of free energy w/ respect to a unit cell parameter. </para>
</para>

<para>Get the contribution from this polymer species to the derivative of free energy per monomer with respect to unit cell parameter n.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>n</entry>
                                <entry>
<para>unit cell parameter index </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 126 of file Polymer.h.</para>
    </section><anchor xml:id="_classPscf_1_1Pspg_1_1Continuous_1_1Polymer_1a30752567fd7b8b93e5c8476bbe8592c5"/>    <section>
    <title>setClassName()</title>
<indexterm><primary>setClassName</primary><secondary>Pscf::Pspg::Continuous::Polymer&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::Continuous::Polymer&lt; D &gt;</primary><secondary>setClassName</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>void Util::ParamComposite::setClassName<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Set class name string. </para>
</para>

<para>Should be set in subclass constructor. </para>
<para>
Definition at line 377 of file ParamComposite.cpp.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
Polymer.hPolymer.tpp</section>
</section>
