<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classPscf_1_1Pspg_1_1RDFieldDft">
<title>Pscf::Pspg::RDFieldDft&lt; D &gt; Class Template Reference</title>
<indexterm><primary>Pscf::Pspg::RDFieldDft&lt; D &gt;</primary></indexterm>
<para>

<para>Fourier transform of a real field on an <link linkend="_classPscf_1_1Pspg_1_1FFT">FFT</link> mesh. </para>
 
</para>
<para>
<computeroutput>#include &lt;RDFieldDft.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for Pscf::Pspg::RDFieldDft&lt; D &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classPscf_1_1Pspg_1_1RDFieldDft.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classPscf_1_1Pspg_1_1RDFieldDft_1ace1c1a6f3f0d685bffb4ca91e10c1a4d">RDFieldDft</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_classPscf_1_1Pspg_1_1RDFieldDft_1a100bba070f79644ae9594d055f431686">RDFieldDft</link> (const <link linkend="_classPscf_1_1Pspg_1_1RDFieldDft">RDFieldDft</link>&lt; D &gt; &amp;other)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para>virtual <link linkend="_classPscf_1_1Pspg_1_1RDFieldDft_1a05d5a073debaa549077192ae2280d6d4">~RDFieldDft</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para><link linkend="_classPscf_1_1Pspg_1_1RDFieldDft">RDFieldDft</link>&lt; D &gt; &amp; <link linkend="_classPscf_1_1Pspg_1_1RDFieldDft_1ac8938135f0f6e3c2787c02a94d63489d">operator=</link> (const <link linkend="_classPscf_1_1Pspg_1_1RDFieldDft">RDFieldDft</link>&lt; D &gt; &amp;other)</para>

<para>Assignment operator. </para>
</listitem>
            <listitem><para>void <link linkend="_classPscf_1_1Pspg_1_1RDFieldDft_1a20848a39a4d4c183ffb95735daf80aea">allocate</link> (const <link linkend="_classPscf_1_1IntVec">IntVec</link>&lt; D &gt; &amp;<link linkend="_classPscf_1_1Pspg_1_1RDFieldDft_1a9139bccfe50448c737da358d80975e05">meshDimensions</link>)</para>

<para>Allocate the underlying C array for an <link linkend="_classPscf_1_1Pspg_1_1FFT">FFT</link> grid. </para>
</listitem>
            <listitem><para>const <link linkend="_classPscf_1_1IntVec">IntVec</link>&lt; D &gt; &amp; <link linkend="_classPscf_1_1Pspg_1_1RDFieldDft_1a9139bccfe50448c737da358d80975e05">meshDimensions</link> () const</para>

<para>Return vector of mesh dimensions by constant reference. </para>
</listitem>
            <listitem><para>const <link linkend="_classPscf_1_1IntVec">IntVec</link>&lt; D &gt; &amp; <link linkend="_classPscf_1_1Pspg_1_1RDFieldDft_1ad30eb28a65052f0b3caedfe2f980e041">dftDimensions</link> () const</para>

<para>Return vector of dft (Fourier) grid dimensions by constant reference. </para>
</listitem>
            <listitem><para>template&lt;class Archive &gt; </para><para>void <link linkend="_classPscf_1_1Pspg_1_1RDFieldDft_1ad73969de3de562fca22bdbdb56609945">serialize</link> (Archive &amp;ar, const unsigned int version)</para>

<para>Serialize a <link linkend="_classPscf_1_1Field">Field</link> to/from an Archive. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;int D&gt;
class Pscf::Pspg::RDFieldDft&lt; D &gt;</title></simplesect>


<para>Fourier transform of a real field on an <link linkend="_classPscf_1_1Pspg_1_1FFT">FFT</link> mesh. </para>
<para>
Definition at line 30 of file RDFieldDft.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classPscf_1_1Pspg_1_1RDFieldDft_1ace1c1a6f3f0d685bffb4ca91e10c1a4d"/>    <section>
    <title>RDFieldDft()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>RDFieldDft</primary><secondary>Pscf::Pspg::RDFieldDft&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::RDFieldDft&lt; D &gt;</primary><secondary>RDFieldDft</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1Pspg_1_1RDFieldDft">Pscf::Pspg::RDFieldDft</link>&lt; D &gt;::<link linkend="_classPscf_1_1Pspg_1_1RDFieldDft">RDFieldDft</link></computeroutput></para><para>

<para>Default constructor. </para>
</para>
<para>
Definition at line 22 of file RDFieldDft.tpp.</para>
    </section><anchor xml:id="_classPscf_1_1Pspg_1_1RDFieldDft_1a100bba070f79644ae9594d055f431686"/>    <section>
    <title>RDFieldDft()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>RDFieldDft</primary><secondary>Pscf::Pspg::RDFieldDft&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::RDFieldDft&lt; D &gt;</primary><secondary>RDFieldDft</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1Pspg_1_1RDFieldDft">Pscf::Pspg::RDFieldDft</link>&lt; D &gt;::<link linkend="_classPscf_1_1Pspg_1_1RDFieldDft">RDFieldDft</link> (const <link linkend="_classPscf_1_1Pspg_1_1RDFieldDft">RDFieldDft</link>&lt; D &gt; &amp; other)</computeroutput></para><para>

<para>Copy constructor. </para>
</para>

<para>Allocates new memory and copies all elements by value.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>other</entry>
                                <entry>
<para>the RFieldDft to be copied. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 41 of file RDFieldDft.tpp.</para>
<para>
References Pscf::Pspg::DField&lt; cudaComplex &gt;::capacity_, Pscf::Pspg::DField&lt; cudaComplex &gt;::cDField(), Pscf::Pspg::DField&lt; cudaComplex &gt;::data_, Pscf::Pspg::DField&lt; cudaComplex &gt;::isAllocated(), and UTIL_THROW.</para>
    </section><anchor xml:id="_classPscf_1_1Pspg_1_1RDFieldDft_1a05d5a073debaa549077192ae2280d6d4"/>    <section>
    <title>~RDFieldDft()</title>
<indexterm><primary>~RDFieldDft</primary><secondary>Pscf::Pspg::RDFieldDft&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::RDFieldDft&lt; D &gt;</primary><secondary>~RDFieldDft</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1Pspg_1_1RDFieldDft">Pscf::Pspg::RDFieldDft</link>&lt; D &gt;::~<link linkend="_classPscf_1_1Pspg_1_1RDFieldDft">RDFieldDft</link><computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Destructor. </para>
</para>

<para>Deletes underlying C array, if allocated previously. </para>
<para>
Definition at line 30 of file RDFieldDft.tpp.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classPscf_1_1Pspg_1_1RDFieldDft_1ac8938135f0f6e3c2787c02a94d63489d"/>    <section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>Pscf::Pspg::RDFieldDft&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::RDFieldDft&lt; D &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1Pspg_1_1RDFieldDft">RDFieldDft</link>&lt; D &gt; &amp; <link linkend="_classPscf_1_1Pspg_1_1RDFieldDft">Pscf::Pspg::RDFieldDft</link>&lt; D &gt;::operator= (const <link linkend="_classPscf_1_1Pspg_1_1RDFieldDft">RDFieldDft</link>&lt; D &gt; &amp; other)</computeroutput></para><para>

<para>Assignment operator. </para>
</para>

<para>If this <link linkend="_classPscf_1_1Field">Field</link> is not allocated, allocates and copies all elements.</para>

<para>If this and the other <link linkend="_classPscf_1_1Field">Field</link> are both allocated, the capacities must be exactly equal. If so, this method copies all elements.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>other</entry>
                                <entry>
<para>the RHS <link linkend="_classPscf_1_1Field">Field</link> </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 66 of file RDFieldDft.tpp.</para>
<para>
References Pscf::Pspg::DField&lt; cudaComplex &gt;::capacity(), Pscf::Pspg::DField&lt; cudaComplex &gt;::capacity_, Pscf::Pspg::DField&lt; cudaComplex &gt;::cDField(), Pscf::Pspg::DField&lt; cudaComplex &gt;::isAllocated(), and UTIL_THROW.</para>
    </section><anchor xml:id="_classPscf_1_1Pspg_1_1RDFieldDft_1a20848a39a4d4c183ffb95735daf80aea"/>    <section>
    <title>allocate()</title>
<indexterm><primary>allocate</primary><secondary>Pscf::Pspg::RDFieldDft&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::RDFieldDft&lt; D &gt;</primary><secondary>allocate</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>void <link linkend="_classPscf_1_1Pspg_1_1RDFieldDft">Pscf::Pspg::RDFieldDft</link>&lt; D &gt;::allocate (const <link linkend="_classPscf_1_1IntVec">IntVec</link>&lt; D &gt; &amp; meshDimensions)</computeroutput></para><para>

<para>Allocate the underlying C array for an <link linkend="_classPscf_1_1Pspg_1_1FFT">FFT</link> grid. </para>
</para>

<para>
                <formalpara>
                    <title>
Exceptions                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>Exception</entry>
                                <entry>
<para>if the RFieldDft is already allocated.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>meshDimensions</entry>
                                <entry>
<para>vector containing number of grid points in each direction </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 116 of file RDFieldDft.h.</para>
<para>
References Pscf::Pspg::DField&lt; Data &gt;::allocate(), and UTIL_CHECK.</para>
    </section><anchor xml:id="_classPscf_1_1Pspg_1_1RDFieldDft_1a9139bccfe50448c737da358d80975e05"/>    <section>
    <title>meshDimensions()</title>
<indexterm><primary>meshDimensions</primary><secondary>Pscf::Pspg::RDFieldDft&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::RDFieldDft&lt; D &gt;</primary><secondary>meshDimensions</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>const <link linkend="_classPscf_1_1IntVec">IntVec</link>&lt; D &gt; &amp; <link linkend="_classPscf_1_1Pspg_1_1RDFieldDft">Pscf::Pspg::RDFieldDft</link>&lt; D &gt;::meshDimensions<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Return vector of mesh dimensions by constant reference. </para>
</para>
<para>
Definition at line 137 of file RDFieldDft.h.</para>
<para>
Referenced by Pscf::Pspg::FFT&lt; D &gt;::setup(), and Pscf::Pspg::FFTBatched&lt; D &gt;::setup().</para>
    </section><anchor xml:id="_classPscf_1_1Pspg_1_1RDFieldDft_1ad30eb28a65052f0b3caedfe2f980e041"/>    <section>
    <title>dftDimensions()</title>
<indexterm><primary>dftDimensions</primary><secondary>Pscf::Pspg::RDFieldDft&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::RDFieldDft&lt; D &gt;</primary><secondary>dftDimensions</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>const <link linkend="_classPscf_1_1IntVec">IntVec</link>&lt; D &gt; &amp; <link linkend="_classPscf_1_1Pspg_1_1RDFieldDft">Pscf::Pspg::RDFieldDft</link>&lt; D &gt;::dftDimensions<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Return vector of dft (Fourier) grid dimensions by constant reference. </para>
</para>

<para>The last element of <link linkend="_classPscf_1_1Pspg_1_1RDFieldDft_1ad30eb28a65052f0b3caedfe2f980e041">dftDimensions()</link> and <link linkend="_classPscf_1_1Pspg_1_1RDFieldDft_1a9139bccfe50448c737da358d80975e05">meshDimensions()</link> differ by about a factor of two: dftDimension()[D-1] = <link linkend="_classPscf_1_1Pspg_1_1RDFieldDft_1a9139bccfe50448c737da358d80975e05">meshDimensions()</link>/2 + 1. For D &gt; 1, other elements are equal. </para>
<para>
Definition at line 144 of file RDFieldDft.h.</para>
<para>
Referenced by Pscf::Pspg::FieldIo&lt; D &gt;::convertBasisToKGrid(), and Pscf::Pspg::FieldIo&lt; D &gt;::convertKGridToBasis().</para>
    </section><anchor xml:id="_classPscf_1_1Pspg_1_1RDFieldDft_1ad73969de3de562fca22bdbdb56609945"/>    <section>
    <title>serialize()</title>
<indexterm><primary>serialize</primary><secondary>Pscf::Pspg::RDFieldDft&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::Pspg::RDFieldDft&lt; D &gt;</primary><secondary>serialize</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><computeroutput>template&lt;class Archive &gt; </computeroutput><para><computeroutput>void <link linkend="_classPscf_1_1Pspg_1_1RDFieldDft">Pscf::Pspg::RDFieldDft</link>&lt; D &gt;::serialize (Archive &amp; ar, const unsigned int version)</computeroutput></para><para>

<para>Serialize a <link linkend="_classPscf_1_1Field">Field</link> to/from an Archive. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>ar</entry>
                                <entry>
<para>archive </para>
</entry>
                            </row>
                            <row>
                                <entry>version</entry>
                                <entry>
<para>archive version id </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 152 of file RDFieldDft.h.</para>
<para>
References UTIL_THROW.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
RDFieldDft.hRDFieldDft.tpp</section>
</section>
