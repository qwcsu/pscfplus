<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classTestException">
<title>TestException Class Reference</title>
<indexterm><primary>TestException</primary></indexterm>
<para>

<para>An exception thrown by a failed unit test. </para>
 
</para>
<para>
<computeroutput>#include &lt;TestException.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classTestException_1a890790e095bf4fc005765d7e48878ed2">TestException</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_classTestException_1aea11191433977ed38c1e9a72a505bccc">TestException</link> (const char *function, const char *<link linkend="_classTestException_1a827fdb190ceb62cffd8979aa681e853c">message</link>, const char *file, int line)</para>

<para>Constructor for throwing. </para>
</listitem>
            <listitem><para><link linkend="_classTestException_1a4ab102f852629e2960120796708b0c5e">TestException</link> (const char *<link linkend="_classTestException_1a827fdb190ceb62cffd8979aa681e853c">message</link>, const char *file, int line)</para>

<para>Constructor without function name parameter. </para>
</listitem>
            <listitem><para><link linkend="_classTestException_1ac3b4f664f6c5370875f9bb21a46a96d8">~TestException</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para>void <link linkend="_classTestException_1a82eac00a19d3815d3e2f12c6ef99f824">write</link> (std::ostream &amp;out)</para>

<para>Write error message to output stream. </para>
</listitem>
            <listitem><para>const std::string &amp; <link linkend="_classTestException_1a827fdb190ceb62cffd8979aa681e853c">message</link> ()</para>

<para>Return the error message. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>std::string <link linkend="_classTestException_1a94be8dc3502e2cf691bc39960239eadc">message_</link></para>

<para>Error message. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>An exception thrown by a failed unit test. </para>
<para>
Definition at line 19 of file TestException.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classTestException_1a890790e095bf4fc005765d7e48878ed2"/>    <section>
    <title>TestException()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>TestException</primary><secondary>TestException</secondary></indexterm>
<indexterm><primary>TestException</primary><secondary>TestException</secondary></indexterm>
<para><computeroutput>TestException::TestException ( )</computeroutput></para><para>

<para>Default constructor. </para>
</para>

<para>Function Definitions ---------------------------------------&#8212;. </para>
<para>
Definition at line 87 of file TestException.h.</para>
    </section><anchor xml:id="_classTestException_1aea11191433977ed38c1e9a72a505bccc"/>    <section>
    <title>TestException()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>TestException</primary><secondary>TestException</secondary></indexterm>
<indexterm><primary>TestException</primary><secondary>TestException</secondary></indexterm>
<para><computeroutput>TestException::TestException (const char * function, const char * message, const char * file, int line)</computeroutput></para><para>

<para>Constructor for throwing. </para>
</para>

<para>Constructs error message that includes file and line number. Values of the file and line parameters should be given by the built-in macros <emphasis role="bold">FILE</emphasis> and <emphasis role="bold">LINE</emphasis>, respectively, in the calling function. A typical call of the constructor is thus of the form: <literallayout><computeroutput>throw&#32;TestException(&quot;MyClass::myFunction&quot;,&#32;&quot;A&#32;terrible&#32;thing&#32;happened!&quot;,
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FILE__,&#32;__LINE__&#32;);
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>function</entry>
                                <entry>
<para>name of the function from which the <link linkend="_classTestException">TestException</link> was thrown </para>
</entry>
                            </row>
                            <row>
                                <entry>message</entry>
                                <entry>
<para>message describing the nature of the error </para>
</entry>
                            </row>
                            <row>
                                <entry>file</entry>
                                <entry>
<para>name of the file from which the <link linkend="_classTestException">TestException</link> was thrown </para>
</entry>
                            </row>
                            <row>
                                <entry>line</entry>
                                <entry>
<para>line number in file </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 94 of file TestException.h.</para>
<para>
References message(), and message_.</para>
    </section><anchor xml:id="_classTestException_1a4ab102f852629e2960120796708b0c5e"/>    <section>
    <title>TestException()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>TestException</primary><secondary>TestException</secondary></indexterm>
<indexterm><primary>TestException</primary><secondary>TestException</secondary></indexterm>
<para><computeroutput>TestException::TestException (const char * message, const char * file, int line)</computeroutput></para><para>

<para>Constructor without function name parameter. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>message</entry>
                                <entry>
<para>message describing the nature of the error </para>
</entry>
                            </row>
                            <row>
                                <entry>file</entry>
                                <entry>
<para>name of the file from which the <link linkend="_classTestException">TestException</link> was thrown </para>
</entry>
                            </row>
                            <row>
                                <entry>line</entry>
                                <entry>
<para>line number in file </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 116 of file TestException.h.</para>
<para>
References message(), and message_.</para>
    </section><anchor xml:id="_classTestException_1ac3b4f664f6c5370875f9bb21a46a96d8"/>    <section>
    <title>~TestException()</title>
<indexterm><primary>~TestException</primary><secondary>TestException</secondary></indexterm>
<indexterm><primary>TestException</primary><secondary>~TestException</secondary></indexterm>
<para><computeroutput>TestException::~TestException ( )</computeroutput></para><para>

<para>Destructor. </para>
</para>
<para>
Definition at line 134 of file TestException.h.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classTestException_1a82eac00a19d3815d3e2f12c6ef99f824"/>    <section>
    <title>write()</title>
<indexterm><primary>write</primary><secondary>TestException</secondary></indexterm>
<indexterm><primary>TestException</primary><secondary>write</secondary></indexterm>
<para><computeroutput>void TestException::write (std::ostream &amp; out)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Write error message to output stream. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out</entry>
                                <entry>
<para>output stream </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 142 of file TestException.h.</para>
<para>
References message_.</para>
    </section><anchor xml:id="_classTestException_1a827fdb190ceb62cffd8979aa681e853c"/>    <section>
    <title>message()</title>
<indexterm><primary>message</primary><secondary>TestException</secondary></indexterm>
<indexterm><primary>TestException</primary><secondary>message</secondary></indexterm>
<para><computeroutput>const std::string &amp; TestException::message ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Return the error message. </para>
</para>
<para>
Definition at line 148 of file TestException.h.</para>
<para>
References message_.</para>
<para>
Referenced by UnitTestRunner&lt; UnitTestClass &gt;::method(), and TestException().</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classTestException_1a94be8dc3502e2cf691bc39960239eadc"/>    <section>
    <title>message_</title>
<indexterm><primary>message_</primary><secondary>TestException</secondary></indexterm>
<indexterm><primary>TestException</primary><secondary>message_</secondary></indexterm>
<para><computeroutput>std::string TestException::message_<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Error message. </para>
</para>
<para>
Definition at line 78 of file TestException.h.</para>
<para>
Referenced by message(), TestException(), and write().</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
TestException.h</section>
</section>
