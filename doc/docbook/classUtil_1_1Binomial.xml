<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classUtil_1_1Binomial">
<title>Util::Binomial Class Reference</title>
<indexterm><primary>Util::Binomial</primary></indexterm>
<para>

<para>Class for binomial coefficients (all static members) </para>
 
</para>
<para>
<computeroutput>#include &lt;Binomial.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static void <link linkend="_classUtil_1_1Binomial_1acbdcceb86156d332bd28f1d07910c9bf">setup</link> (int nMax)</para>

<para>Precompute all combinations C(n, m) up to n = nMax. </para>
</listitem>
            <listitem><para>static void <link linkend="_classUtil_1_1Binomial_1ae21bda4ec53c9a7a4227d6d04b010f63">clear</link> ()</para>

<para>Release all static memory. </para>
</listitem>
            <listitem><para>static int <link linkend="_classUtil_1_1Binomial_1ad8fe248a19ab5ddd8ee285b9f6190126">coeff</link> (int n, int m)</para>

<para>Return coefficient &quot;n choose m&quot;, or C(n, m) = n!/(m!(n-m)!). </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Class for binomial coefficients (all static members) </para>
<para>
Definition at line 27 of file Binomial.h.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classUtil_1_1Binomial_1acbdcceb86156d332bd28f1d07910c9bf"/>    <section>
    <title>setup()</title>
<indexterm><primary>setup</primary><secondary>Util::Binomial</secondary></indexterm>
<indexterm><primary>Util::Binomial</primary><secondary>setup</secondary></indexterm>
<para><computeroutput>void Util::Binomial::setup (int nMax)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Precompute all combinations C(n, m) up to n = nMax. </para>
</para>

<para>Algorithm: Construct rows [0,...,nMax] of Pascal&apos;s triangle.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>nMax</entry>
                                <entry>
<para>maximum value of n to precompute. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 17 of file Binomial.cpp.</para>
<para>
References Util::GArray&lt; Data &gt;::resize(), and UTIL_CHECK.</para>
<para>
Referenced by coeff(), and Util::Polynomial&lt; double &gt;::shift().</para>
    </section><anchor xml:id="_classUtil_1_1Binomial_1ae21bda4ec53c9a7a4227d6d04b010f63"/>    <section>
    <title>clear()</title>
<indexterm><primary>clear</primary><secondary>Util::Binomial</secondary></indexterm>
<indexterm><primary>Util::Binomial</primary><secondary>clear</secondary></indexterm>
<para><computeroutput>void Util::Binomial::clear ( )<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Release all static memory. </para>
</para>
<para>
Definition at line 47 of file Binomial.cpp.</para>
<para>
References Util::GArray&lt; Data &gt;::capacity(), and Util::GArray&lt; Data &gt;::deallocate().</para>
    </section><anchor xml:id="_classUtil_1_1Binomial_1ad8fe248a19ab5ddd8ee285b9f6190126"/>    <section>
    <title>coeff()</title>
<indexterm><primary>coeff</primary><secondary>Util::Binomial</secondary></indexterm>
<indexterm><primary>Util::Binomial</primary><secondary>coeff</secondary></indexterm>
<para><computeroutput>int Util::Binomial::coeff (int n, int m)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Return coefficient &quot;n choose m&quot;, or C(n, m) = n!/(m!(n-m)!). </para>
</para>

<para>Algorithm: Returns precomputed value C(n,m) if already known. Otherwise, calls setup(n) to computes and stores values of C(n&apos;, m) for all n&apos; &lt;= n, then returns desired value.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>n</entry>
                                <entry>
<para>larger integer (overall power in binomial) </para>
</entry>
                            </row>
                            <row>
                                <entry>m</entry>
                                <entry>
<para>parameter in range [0,n] </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 55 of file Binomial.cpp.</para>
<para>
References setup(), and UTIL_CHECK.</para>
<para>
Referenced by Util::Polynomial&lt; double &gt;::shift().</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
Binomial.hBinomial.cpp</section>
</section>
