<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classUtil_1_1FArrayParam">
<title>Util::FArrayParam&lt; Type, N &gt; Class Template Reference</title>
<indexterm><primary>Util::FArrayParam&lt; Type, N &gt;</primary></indexterm>
<para>

<para>A <link linkend="_classUtil_1_1Parameter">Parameter</link> associated with a <link linkend="_classUtil_1_1FArray">FArray</link> container. </para>
 
</para>
<para>
<computeroutput>#include &lt;FArrayParam.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for Util::FArrayParam&lt; Type, N &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classUtil_1_1FArrayParam.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classUtil_1_1FArrayParam_1af59fb0017ecc2955cabf5634940129f8">FArrayParam</link> (const char *<link linkend="_classUtil_1_1Parameter_1a2e6a63d5a0827ee3de51d481aee38174">label</link>, <link linkend="_classUtil_1_1FArray">FArray</link>&lt; Type, N &gt; &amp;array, bool <link linkend="_classUtil_1_1Parameter_1accdc4c9c774b9394b387277543c1ba74">isRequired</link>=true)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para>void <link linkend="_classUtil_1_1FArrayParam_1a63c5e0963f1053555d310bd7e2838801">writeParam</link> (std::ostream &amp;out)</para>

<para>Write <link linkend="_classUtil_1_1FArray">FArray</link> parameter to stream. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual void <link linkend="_classUtil_1_1FArrayParam_1aa9fb6e5e22c28f5b787996c226125369">readValue</link> (std::istream &amp;in)</para>

<para>Read parameter value from an input stream. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_classUtil_1_1FArrayParam_1a4212b1eef135a3a7b9ab4169f8b7e7cb">loadValue</link> (<link linkend="_classUtil_1_1Serializable_1ac6bcbf9bac926cada5a398804410e891">Serializable::IArchive</link> &amp;ar)</para>

<para>Load bare parameter value from an archive. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_classUtil_1_1FArrayParam_1ad1737f859cff068584f812fd9e279342">saveValue</link> (<link linkend="_classUtil_1_1Serializable_1aca43a1eea5ec5f13189a57892a7a6d04">Serializable::OArchive</link> &amp;ar)</para>

<para>Save parameter value to an archive. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_classUtil_1_1FArrayParam_1a3aee8175a45ea44b57fb5a2135f8957d">bcastValue</link> ()</para>

<para>Broadcast parameter value within the ioCommunicator. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;class Type, int N&gt;
class Util::FArrayParam&lt; Type, N &gt;</title></simplesect>


<para>A <link linkend="_classUtil_1_1Parameter">Parameter</link> associated with a <link linkend="_classUtil_1_1FArray">FArray</link> container. </para>
<para>
Definition at line 26 of file FArrayParam.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classUtil_1_1FArrayParam_1af59fb0017ecc2955cabf5634940129f8"/>    <section>
    <title>FArrayParam()</title>
<indexterm><primary>FArrayParam</primary><secondary>Util::FArrayParam&lt; Type, N &gt;</secondary></indexterm>
<indexterm><primary>Util::FArrayParam&lt; Type, N &gt;</primary><secondary>FArrayParam</secondary></indexterm>
<computeroutput>template&lt;class Type , int N&gt; </computeroutput><para><computeroutput><link linkend="_classUtil_1_1FArrayParam">Util::FArrayParam</link>&lt; Type, N &gt;::<link linkend="_classUtil_1_1FArrayParam">FArrayParam</link> (const char * label, <link linkend="_classUtil_1_1FArray">FArray</link>&lt; Type, N &gt; &amp; array, bool isRequired = <computeroutput>true</computeroutput>
)</computeroutput></para><para>

<para>Constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>label</entry>
                                <entry>
<para>label string for parameter file </para>
</entry>
                            </row>
                            <row>
                                <entry>array</entry>
                                <entry>
<para>associated <link linkend="_classUtil_1_1FArray">FArray</link> variable </para>
</entry>
                            </row>
                            <row>
                                <entry>isRequired</entry>
                                <entry>
<para>Is this a required parameter? </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 88 of file FArrayParam.h.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classUtil_1_1FArrayParam_1a63c5e0963f1053555d310bd7e2838801"/>    <section>
    <title>writeParam()</title>
<indexterm><primary>writeParam</primary><secondary>Util::FArrayParam&lt; Type, N &gt;</secondary></indexterm>
<indexterm><primary>Util::FArrayParam&lt; Type, N &gt;</primary><secondary>writeParam</secondary></indexterm>
<computeroutput>template&lt;class Type , int N&gt; </computeroutput><para><computeroutput>void <link linkend="_classUtil_1_1FArrayParam">Util::FArrayParam</link>&lt; Type, N &gt;::writeParam (std::ostream &amp; out)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Write <link linkend="_classUtil_1_1FArray">FArray</link> parameter to stream. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out</entry>
                                <entry>
<para>output stream </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implements <link linkend="_classUtil_1_1ParamComponent_1ac17d6ab63f9b0e5f966d6a3cfbc26d86">Util::ParamComponent</link>.</para>
<para>
Definition at line 131 of file FArrayParam.h.</para>
<para>
References Util::Parameter::Precision, and Util::Parameter::Width.</para>
    </section><anchor xml:id="_classUtil_1_1FArrayParam_1aa9fb6e5e22c28f5b787996c226125369"/>    <section>
    <title>readValue()</title>
<indexterm><primary>readValue</primary><secondary>Util::FArrayParam&lt; Type, N &gt;</secondary></indexterm>
<indexterm><primary>Util::FArrayParam&lt; Type, N &gt;</primary><secondary>readValue</secondary></indexterm>
<computeroutput>template&lt;class Type , int N&gt; </computeroutput><para><computeroutput>void <link linkend="_classUtil_1_1FArrayParam">Util::FArrayParam</link>&lt; Type, N &gt;::readValue (std::istream &amp; in)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Read parameter value from an input stream. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in</entry>
                                <entry>
<para>input stream from which to read </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Reimplemented from <link linkend="_classUtil_1_1Parameter_1a5817fa95bf2e32808d384a66e272dc37">Util::Parameter</link>.</para>
<para>
Definition at line 97 of file FArrayParam.h.</para>
    </section><anchor xml:id="_classUtil_1_1FArrayParam_1a4212b1eef135a3a7b9ab4169f8b7e7cb"/>    <section>
    <title>loadValue()</title>
<indexterm><primary>loadValue</primary><secondary>Util::FArrayParam&lt; Type, N &gt;</secondary></indexterm>
<indexterm><primary>Util::FArrayParam&lt; Type, N &gt;</primary><secondary>loadValue</secondary></indexterm>
<computeroutput>template&lt;class Type , int N&gt; </computeroutput><para><computeroutput>void <link linkend="_classUtil_1_1FArrayParam">Util::FArrayParam</link>&lt; Type, N &gt;::loadValue (<link linkend="_classUtil_1_1Serializable_1ac6bcbf9bac926cada5a398804410e891">Serializable::IArchive</link> &amp; ar)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Load bare parameter value from an archive. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>ar</entry>
                                <entry>
<para>input archive from which to load </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Reimplemented from <link linkend="_classUtil_1_1Parameter_1a9e3d8dbd2198974017cd8711ae9c990d">Util::Parameter</link>.</para>
<para>
Definition at line 108 of file FArrayParam.h.</para>
    </section><anchor xml:id="_classUtil_1_1FArrayParam_1ad1737f859cff068584f812fd9e279342"/>    <section>
    <title>saveValue()</title>
<indexterm><primary>saveValue</primary><secondary>Util::FArrayParam&lt; Type, N &gt;</secondary></indexterm>
<indexterm><primary>Util::FArrayParam&lt; Type, N &gt;</primary><secondary>saveValue</secondary></indexterm>
<computeroutput>template&lt;class Type , int N&gt; </computeroutput><para><computeroutput>void <link linkend="_classUtil_1_1FArrayParam">Util::FArrayParam</link>&lt; Type, N &gt;::saveValue (<link linkend="_classUtil_1_1Serializable_1aca43a1eea5ec5f13189a57892a7a6d04">Serializable::OArchive</link> &amp; ar)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Save parameter value to an archive. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>ar</entry>
                                <entry>
<para>output archive to which to save </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Reimplemented from <link linkend="_classUtil_1_1Parameter_1a61858c5163b492f2618689a35ff05044">Util::Parameter</link>.</para>
<para>
Definition at line 115 of file FArrayParam.h.</para>
    </section><anchor xml:id="_classUtil_1_1FArrayParam_1a3aee8175a45ea44b57fb5a2135f8957d"/>    <section>
    <title>bcastValue()</title>
<indexterm><primary>bcastValue</primary><secondary>Util::FArrayParam&lt; Type, N &gt;</secondary></indexterm>
<indexterm><primary>Util::FArrayParam&lt; Type, N &gt;</primary><secondary>bcastValue</secondary></indexterm>
<computeroutput>template&lt;class Type , int N&gt; </computeroutput><para><computeroutput>void <link linkend="_classUtil_1_1FArrayParam">Util::FArrayParam</link>&lt; Type, N &gt;::bcastValue<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Broadcast parameter value within the ioCommunicator. </para>
</para>
<para>
Reimplemented from <link linkend="_classUtil_1_1Parameter_1ad93ad2700686a5a32755fdb67b2a0792">Util::Parameter</link>.</para>
<para>
Definition at line 123 of file FArrayParam.h.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
FArrayParam.h</section>
</section>
