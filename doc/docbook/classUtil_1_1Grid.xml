<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classUtil_1_1Grid">
<title>Util::Grid Class Reference</title>
<indexterm><primary>Util::Grid</primary></indexterm>
<para>

<para>A grid of points indexed by integer coordinates. </para>
 
</para>
<para>
<computeroutput>#include &lt;Grid.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classUtil_1_1Grid_1aeb8dbad2312b5bf1f1605fa813c10f71">Grid</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_classUtil_1_1Grid_1a4885608a4c7fc8d032975f6db59ee96d">Grid</link> (const <link linkend="_classUtil_1_1IntVector">IntVector</link> &amp;<link linkend="_classUtil_1_1Grid_1aad05325f642ce5c9073e159405192736">dimensions</link>)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para>void <link linkend="_classUtil_1_1Grid_1ad7dae1f5e841c9ccbd515922deeb17bb">setDimensions</link> (const <link linkend="_classUtil_1_1IntVector">IntVector</link> &amp;<link linkend="_classUtil_1_1Grid_1aad05325f642ce5c9073e159405192736">dimensions</link>)</para>

<para>Set the grid dimensions in all directions. </para>
</listitem>
            <listitem><para><link linkend="_classUtil_1_1IntVector">IntVector</link> <link linkend="_classUtil_1_1Grid_1aad05325f642ce5c9073e159405192736">dimensions</link> () const</para>

<para>Get an <link linkend="_classUtil_1_1IntVector">IntVector</link> of the grid dimensions. </para>
</listitem>
            <listitem><para>int <link linkend="_classUtil_1_1Grid_1a0dcf348ff07975631f3cf3f7a65f166b">dimension</link> (int i) const</para>

<para>Get grid dimension along Cartesian direction i. </para>
</listitem>
            <listitem><para>int <link linkend="_classUtil_1_1Grid_1ab3564c0d942b9ade99250753368ff2a9">size</link> () const</para>

<para>Get total number of grid points. </para>
</listitem>
            <listitem><para><link linkend="_classUtil_1_1IntVector">IntVector</link> <link linkend="_classUtil_1_1Grid_1a13e289916665be9bb9b8b999e10c6ebf">position</link> (int <link linkend="_classUtil_1_1Grid_1a1f2123a0dc7a5674541a954e835bdd3e">rank</link>) const</para>

<para>Get the position <link linkend="_classUtil_1_1IntVector">IntVector</link> of a grid point with a specified rank. </para>
</listitem>
            <listitem><para>int <link linkend="_classUtil_1_1Grid_1a1f2123a0dc7a5674541a954e835bdd3e">rank</link> (const <link linkend="_classUtil_1_1IntVector">IntVector</link> &amp;<link linkend="_classUtil_1_1Grid_1a13e289916665be9bb9b8b999e10c6ebf">position</link>) const</para>

<para>Get the rank of a grid point with specified position. </para>
</listitem>
            <listitem><para>bool <link linkend="_classUtil_1_1Grid_1ad7e32a4d160432f6440940e64a2d9271">isInGrid</link> (int coordinate, int i) const</para>

<para>Is this coordinate in range? </para>
</listitem>
            <listitem><para>bool <link linkend="_classUtil_1_1Grid_1aa9a64c09248a8962664d51141ea8fa64">isInGrid</link> (<link linkend="_classUtil_1_1IntVector">IntVector</link> &amp;<link linkend="_classUtil_1_1Grid_1a13e289916665be9bb9b8b999e10c6ebf">position</link>) const</para>

<para>Is this <link linkend="_classUtil_1_1IntVector">IntVector</link> grid position within the grid? </para>
</listitem>
            <listitem><para>int <link linkend="_classUtil_1_1Grid_1ad822de65c7c12ff71f7cee57dadb2dc2">shift</link> (int &amp;coordinate, int i) const</para>

<para>Shift a periodic coordinate into range. </para>
</listitem>
            <listitem><para><link linkend="_classUtil_1_1IntVector">IntVector</link> <link linkend="_classUtil_1_1Grid_1a9d4e445c87bc22948c612fe9bd3b6f20">shift</link> (<link linkend="_classUtil_1_1IntVector">IntVector</link> &amp;<link linkend="_classUtil_1_1Grid_1a13e289916665be9bb9b8b999e10c6ebf">position</link>) const</para>

<para>Shift a periodic position into primary grid. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>A grid of points indexed by integer coordinates. </para>



<para>The coordinates of a point on a grid form an <link linkend="_classUtil_1_1IntVector">IntVector</link>, referred to here as a grid position. Each element of a grid position must lie in the range 0 &lt;= position[i] &lt; dimension(i), where i indexes a Cartesian axis, and dimension(i) is the dimension of the grid along axis i.</para>

<para>Each grid position is also assigned a non-negative integer rank. 
<literallayout>&#160;&#xa;</literallayout>
 <link linkend="_classUtil_1_1Grid">Grid</link> position ranks are ordered sequentially like elements in a multi-dimensional C array, with the last coordinate being the most rapidly varying. </para>
<para>
Definition at line 33 of file Grid.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classUtil_1_1Grid_1aeb8dbad2312b5bf1f1605fa813c10f71"/>    <section>
    <title>Grid()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Grid</primary><secondary>Util::Grid</secondary></indexterm>
<indexterm><primary>Util::Grid</primary><secondary>Grid</secondary></indexterm>
<para><computeroutput>Util::Grid::Grid ( )</computeroutput></para><para>

<para>Default constructor. </para>
</para>
<para>
Definition at line 15 of file Grid.cpp.</para>
<para>
References dimensions(), and setDimensions().</para>
    </section><anchor xml:id="_classUtil_1_1Grid_1a4885608a4c7fc8d032975f6db59ee96d"/>    <section>
    <title>Grid()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Grid</primary><secondary>Util::Grid</secondary></indexterm>
<indexterm><primary>Util::Grid</primary><secondary>Grid</secondary></indexterm>
<para><computeroutput>Util::Grid::Grid (const <link linkend="_classUtil_1_1IntVector">IntVector</link> &amp; dimensions)</computeroutput></para><para>

<para>Constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>dimensions</entry>
                                <entry>
<para><link linkend="_classUtil_1_1IntVector">IntVector</link> of grid dimensions </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 24 of file Grid.cpp.</para>
<para>
References dimensions(), and setDimensions().</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classUtil_1_1Grid_1ad7dae1f5e841c9ccbd515922deeb17bb"/>    <section>
    <title>setDimensions()</title>
<indexterm><primary>setDimensions</primary><secondary>Util::Grid</secondary></indexterm>
<indexterm><primary>Util::Grid</primary><secondary>setDimensions</secondary></indexterm>
<para><computeroutput>void Util::Grid::setDimensions (const <link linkend="_classUtil_1_1IntVector">IntVector</link> &amp; dimensions)</computeroutput></para><para>

<para>Set the grid dimensions in all directions. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>dimensions</entry>
                                <entry>
<para><link linkend="_classUtil_1_1IntVector">IntVector</link> of grid dimensions. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 32 of file Grid.cpp.</para>
<para>
References Util::Dimension, dimensions(), and UTIL_THROW.</para>
<para>
Referenced by Grid().</para>
    </section><anchor xml:id="_classUtil_1_1Grid_1aad05325f642ce5c9073e159405192736"/>    <section>
    <title>dimensions()</title>
<indexterm><primary>dimensions</primary><secondary>Util::Grid</secondary></indexterm>
<indexterm><primary>Util::Grid</primary><secondary>dimensions</secondary></indexterm>
<para><computeroutput><link linkend="_classUtil_1_1IntVector">IntVector</link> Util::Grid::dimensions ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Get an <link linkend="_classUtil_1_1IntVector">IntVector</link> of the grid dimensions. </para>
</para>
<para>
Definition at line 156 of file Grid.h.</para>
<para>
Referenced by Grid(), and setDimensions().</para>
    </section><anchor xml:id="_classUtil_1_1Grid_1a0dcf348ff07975631f3cf3f7a65f166b"/>    <section>
    <title>dimension()</title>
<indexterm><primary>dimension</primary><secondary>Util::Grid</secondary></indexterm>
<indexterm><primary>Util::Grid</primary><secondary>dimension</secondary></indexterm>
<para><computeroutput>int Util::Grid::dimension (int i) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Get grid dimension along Cartesian direction i. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>i</entry>
                                <entry>
<para>index of Cartesian direction 0 &lt;=i &lt; <link linkend="_group__Space__Module_1ga2772f5ec799816685d37798d8d358ef7">Util::Dimension</link> </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 159 of file Grid.h.</para>
<para>
References Util::Dimension.</para>
    </section><anchor xml:id="_classUtil_1_1Grid_1ab3564c0d942b9ade99250753368ff2a9"/>    <section>
    <title>size()</title>
<indexterm><primary>size</primary><secondary>Util::Grid</secondary></indexterm>
<indexterm><primary>Util::Grid</primary><secondary>size</secondary></indexterm>
<para><computeroutput>int Util::Grid::size ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Get total number of grid points. </para>
</para>
<para>
Definition at line 166 of file Grid.h.</para>
    </section><anchor xml:id="_classUtil_1_1Grid_1a13e289916665be9bb9b8b999e10c6ebf"/>    <section>
    <title>position()</title>
<indexterm><primary>position</primary><secondary>Util::Grid</secondary></indexterm>
<indexterm><primary>Util::Grid</primary><secondary>position</secondary></indexterm>
<para><computeroutput><link linkend="_classUtil_1_1IntVector">IntVector</link> Util::Grid::position (int rank) const</computeroutput></para><para>

<para>Get the position <link linkend="_classUtil_1_1IntVector">IntVector</link> of a grid point with a specified rank. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>rank</entry>
                                <entry>
<para>integer rank of a grid point. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><link linkend="_classUtil_1_1IntVector">IntVector</link> containing coordinates of specified point. </para>
</formalpara>
</para>
<para>
Definition at line 64 of file Grid.cpp.</para>
<para>
References Util::Dimension.</para>
<para>
Referenced by isInGrid(), rank(), and shift().</para>
    </section><anchor xml:id="_classUtil_1_1Grid_1a1f2123a0dc7a5674541a954e835bdd3e"/>    <section>
    <title>rank()</title>
<indexterm><primary>rank</primary><secondary>Util::Grid</secondary></indexterm>
<indexterm><primary>Util::Grid</primary><secondary>rank</secondary></indexterm>
<para><computeroutput>int Util::Grid::rank (const <link linkend="_classUtil_1_1IntVector">IntVector</link> &amp; position) const</computeroutput></para><para>

<para>Get the rank of a grid point with specified position. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>position</entry>
                                <entry>
<para>integer position of a grid point </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>integer rank of specified grid point </para>
</formalpara>
</para>
<para>
Definition at line 49 of file Grid.cpp.</para>
<para>
References Util::Dimension, and position().</para>
    </section><anchor xml:id="_classUtil_1_1Grid_1ad7e32a4d160432f6440940e64a2d9271"/>    <section>
    <title>isInGrid()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>isInGrid</primary><secondary>Util::Grid</secondary></indexterm>
<indexterm><primary>Util::Grid</primary><secondary>isInGrid</secondary></indexterm>
<para><computeroutput>bool Util::Grid::isInGrid (int coordinate, int i) const</computeroutput></para><para>

<para>Is this coordinate in range? </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>coordinate</entry>
                                <entry>
<para>coordinate value for direction i </para>
</entry>
                            </row>
                            <row>
                                <entry>i</entry>
                                <entry>
<para>index for Cartesian direction </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>true iff 0 &lt;= coordinate &lt; dimension(i). </para>
</formalpara>
</para>
<para>
Definition at line 78 of file Grid.cpp.</para>
    </section><anchor xml:id="_classUtil_1_1Grid_1aa9a64c09248a8962664d51141ea8fa64"/>    <section>
    <title>isInGrid()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>isInGrid</primary><secondary>Util::Grid</secondary></indexterm>
<indexterm><primary>Util::Grid</primary><secondary>isInGrid</secondary></indexterm>
<para><computeroutput>bool Util::Grid::isInGrid (<link linkend="_classUtil_1_1IntVector">IntVector</link> &amp; position) const</computeroutput></para><para>

<para>Is this <link linkend="_classUtil_1_1IntVector">IntVector</link> grid position within the grid? </para>
</para>

<para>Returns true iff 0 &lt;= coordinate[i] &lt; dimension(i) for all i.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>position</entry>
                                <entry>
<para>grid point position </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>true iff 0 &lt;= coordinate[i] &lt; dimension(i) for all i. </para>
</formalpara>
</para>
<para>
Definition at line 88 of file Grid.cpp.</para>
<para>
References Util::Dimension, and position().</para>
    </section><anchor xml:id="_classUtil_1_1Grid_1ad822de65c7c12ff71f7cee57dadb2dc2"/>    <section>
    <title>shift()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>shift</primary><secondary>Util::Grid</secondary></indexterm>
<indexterm><primary>Util::Grid</primary><secondary>shift</secondary></indexterm>
<para><computeroutput>int Util::Grid::shift (int &amp; coordinate, int i) const</computeroutput></para><para>

<para>Shift a periodic coordinate into range. </para>
</para>

<para>Upon return, the coordinate will be shifted to lie within the range 0 &lt;= coordinate &lt; dimension(i) by subtracting an integer multiple of dimension(i), giving coordinate - shift*dimension(i). The return value is the required integer &#8216;shift&#8217;.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>coordinate</entry>
                                <entry>
<para>coordinate in Cartesian direction i. </para>
</entry>
                            </row>
                            <row>
                                <entry>i</entry>
                                <entry>
<para>index of Cartesian direction, i &gt;= 0. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>multiple of dimension(i) subtracted from input value. </para>
</formalpara>
</para>
<para>
Definition at line 100 of file Grid.cpp.</para>
<para>
Referenced by shift().</para>
    </section><anchor xml:id="_classUtil_1_1Grid_1a9d4e445c87bc22948c612fe9bd3b6f20"/>    <section>
    <title>shift()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>shift</primary><secondary>Util::Grid</secondary></indexterm>
<indexterm><primary>Util::Grid</primary><secondary>shift</secondary></indexterm>
<para><computeroutput><link linkend="_classUtil_1_1IntVector">IntVector</link> Util::Grid::shift (<link linkend="_classUtil_1_1IntVector">IntVector</link> &amp; position) const</computeroutput></para><para>

<para>Shift a periodic position into primary grid. </para>
</para>

<para>Upon return, each element of the parameter position is shifted to lie within the range 0 &lt;= position[i] &lt; dimension(i) by adding or subtracting an integer multiple of dimension(i). The <link linkend="_classUtil_1_1IntVector">IntVector</link> of shift values is returned.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>position</entry>
                                <entry>
<para><link linkend="_classUtil_1_1IntVector">IntVector</link> position within a grid. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><link linkend="_classUtil_1_1IntVector">IntVector</link> of integer shifts. </para>
</formalpara>
</para>
<para>
Definition at line 112 of file Grid.cpp.</para>
<para>
References Util::Dimension, position(), and shift().</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
Grid.hGrid.cpp</section>
</section>
