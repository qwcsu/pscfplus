<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classUtil_1_1MpiLoader">
<title>Util::MpiLoader&lt; IArchive &gt; Class Template Reference</title>
<indexterm><primary>Util::MpiLoader&lt; IArchive &gt;</primary></indexterm>
<para>

<para>Provides methods for MPI-aware loading of data from input archive. </para>
 
</para>
<para>
<computeroutput>#include &lt;MpiLoader.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classUtil_1_1MpiLoader_1ad0c46043b00a27cb738ebf0b25cc00f2">MpiLoader</link> (<link linkend="_classUtil_1_1MpiFileIo">MpiFileIo</link> &amp;mpiFileIo, IArchive &amp;archive)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para>template&lt;typename Data &gt; </para><para>void <link linkend="_classUtil_1_1MpiLoader_1a8d2998ecd3fe41b2ac2ccda7f4f7ca97">load</link> (Data &amp;value)</para>

<para>Load and broadcast a single Data value. </para>
</listitem>
            <listitem><para>template&lt;typename Data &gt; </para><para>void <link linkend="_classUtil_1_1MpiLoader_1a5cfcf66d73c7ed9974805633fe193485">load</link> (Data *value, int n)</para>

<para>Load and broadcast a C array. </para>
</listitem>
            <listitem><para>template&lt;typename Data &gt; </para><para>void <link linkend="_classUtil_1_1MpiLoader_1a96fad52aeedb08968ee143d23ff5d7e8">load</link> (<link linkend="_classUtil_1_1DArray">DArray</link>&lt; Data &gt; &amp;array, int n)</para>

<para>Load and broadcast a <link linkend="_classUtil_1_1DArray">DArray</link> &lt; Data &gt; container. </para>
</listitem>
            <listitem><para>template&lt;typename Data , int N&gt; </para><para>void <link linkend="_classUtil_1_1MpiLoader_1a79b195f896dc7a2cf87dd4b9b51cb125">load</link> (<link linkend="_classUtil_1_1FArray">FArray</link>&lt; Data, N &gt; &amp;array)</para>

<para>Load and broadcast an <link linkend="_classUtil_1_1FArray">FArray</link> &lt;Data , N &gt; object. </para>
</listitem>
            <listitem><para>template&lt;typename Data &gt; </para><para>void <link linkend="_classUtil_1_1MpiLoader_1a1a2acb9078cc8cd7ac092252a89b46ea">load</link> (Data *value, int m, int n, int np)</para>

<para>Load and broadcast a 2D CArray of Data objects. </para>
</listitem>
            <listitem><para>template&lt;typename Data &gt; </para><para>void <link linkend="_classUtil_1_1MpiLoader_1a1b747eb6f4c30250ab55c193b39a3d08">load</link> (<link linkend="_classUtil_1_1DMatrix">DMatrix</link>&lt; Data &gt; &amp;matrix, int m, int n)</para>

<para>Load and broadcast a DMatrix&lt;Data&gt; object. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;class IArchive&gt;
class Util::MpiLoader&lt; IArchive &gt;</title></simplesect>


<para>Provides methods for MPI-aware loading of data from input archive. </para>



<para>Each <link linkend="_classUtil_1_1MpiLoader">MpiLoader</link> is associated with an IArchive input archive, and with a <link linkend="_classUtil_1_1MpiFileIo">MpiFileIo</link>, which are passed as arguments to the constructor. The <link linkend="_classUtil_1_1MpiFileIo">MpiFileIo</link> argument is often a <link linkend="_classUtil_1_1ParamComposite">ParamComposite</link>, which is derived from <link linkend="_classUtil_1_1MpiFileIo">MpiFileIo</link>.</para>

<para>The &quot;load&quot; function templates all load data from the archive and (if appropriate) broadcast data among processors. If MPI is not enabled (i.e., if UTIL_MPI is not defined), then the data is simply loaded from the archive. If MPI is enabled and a parameter communicator is set, data is loaded from the archive by the ioProcessor and then broadcast to all other processors in the IO communicator. If MPI is enabled but no parameter communicator is set, every processor loads data independently. </para>
<para>
Definition at line 43 of file MpiLoader.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classUtil_1_1MpiLoader_1ad0c46043b00a27cb738ebf0b25cc00f2"/>    <section>
    <title>MpiLoader()</title>
<indexterm><primary>MpiLoader</primary><secondary>Util::MpiLoader&lt; IArchive &gt;</secondary></indexterm>
<indexterm><primary>Util::MpiLoader&lt; IArchive &gt;</primary><secondary>MpiLoader</secondary></indexterm>
<computeroutput>template&lt;typename IArchive &gt; </computeroutput><para><computeroutput><link linkend="_classUtil_1_1MpiLoader">Util::MpiLoader</link>&lt; IArchive &gt;::<link linkend="_classUtil_1_1MpiLoader">MpiLoader</link> (<link linkend="_classUtil_1_1MpiFileIo">MpiFileIo</link> &amp; mpiFileIo, IArchive &amp; archive)</computeroutput></para><para>

<para>Constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>mpiFileIo</entry>
                                <entry>
<para>associated <link linkend="_classUtil_1_1MpiFileIo">MpiFileIo</link> object </para>
</entry>
                            </row>
                            <row>
                                <entry>archive</entry>
                                <entry>
<para>input archive from which data will be loaded </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 127 of file MpiLoader.h.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classUtil_1_1MpiLoader_1a8d2998ecd3fe41b2ac2ccda7f4f7ca97"/>    <section>
    <title>load()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>load</primary><secondary>Util::MpiLoader&lt; IArchive &gt;</secondary></indexterm>
<indexterm><primary>Util::MpiLoader&lt; IArchive &gt;</primary><secondary>load</secondary></indexterm>
<computeroutput>template&lt;typename IArchive &gt; </computeroutput><computeroutput>template&lt;typename Data &gt; </computeroutput><para><computeroutput>void <link linkend="_classUtil_1_1MpiLoader">Util::MpiLoader</link>&lt; IArchive &gt;::load (Data &amp; value)</computeroutput></para><para>

<para>Load and broadcast a single Data value. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>value</entry>
                                <entry>
<para>reference to a Data </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 137 of file MpiLoader.h.</para>
<para>
Referenced by Util::FileMaster::loadParameters().</para>
    </section><anchor xml:id="_classUtil_1_1MpiLoader_1a5cfcf66d73c7ed9974805633fe193485"/>    <section>
    <title>load()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>load</primary><secondary>Util::MpiLoader&lt; IArchive &gt;</secondary></indexterm>
<indexterm><primary>Util::MpiLoader&lt; IArchive &gt;</primary><secondary>load</secondary></indexterm>
<computeroutput>template&lt;typename IArchive &gt; </computeroutput><computeroutput>template&lt;typename Data &gt; </computeroutput><para><computeroutput>void <link linkend="_classUtil_1_1MpiLoader">Util::MpiLoader</link>&lt; IArchive &gt;::load (Data * value, int n)</computeroutput></para><para>

<para>Load and broadcast a C array. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>value</entry>
                                <entry>
<para>pointer to array </para>
</entry>
                            </row>
                            <row>
                                <entry>n</entry>
                                <entry>
<para>number of elements </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 154 of file MpiLoader.h.</para>
    </section><anchor xml:id="_classUtil_1_1MpiLoader_1a96fad52aeedb08968ee143d23ff5d7e8"/>    <section>
    <title>load()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>load</primary><secondary>Util::MpiLoader&lt; IArchive &gt;</secondary></indexterm>
<indexterm><primary>Util::MpiLoader&lt; IArchive &gt;</primary><secondary>load</secondary></indexterm>
<computeroutput>template&lt;typename IArchive &gt; </computeroutput><computeroutput>template&lt;typename Data &gt; </computeroutput><para><computeroutput>void <link linkend="_classUtil_1_1MpiLoader">Util::MpiLoader</link>&lt; IArchive &gt;::load (<link linkend="_classUtil_1_1DArray">DArray</link>&lt; Data &gt; &amp; array, int n)</computeroutput></para><para>

<para>Load and broadcast a <link linkend="_classUtil_1_1DArray">DArray</link> &lt; Data &gt; container. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>array</entry>
                                <entry>
<para><link linkend="_classUtil_1_1DArray">DArray</link> object </para>
</entry>
                            </row>
                            <row>
                                <entry>n</entry>
                                <entry>
<para>number of elements </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 174 of file MpiLoader.h.</para>
<para>
References UTIL_THROW.</para>
    </section><anchor xml:id="_classUtil_1_1MpiLoader_1a79b195f896dc7a2cf87dd4b9b51cb125"/>    <section>
    <title>load()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>load</primary><secondary>Util::MpiLoader&lt; IArchive &gt;</secondary></indexterm>
<indexterm><primary>Util::MpiLoader&lt; IArchive &gt;</primary><secondary>load</secondary></indexterm>
<computeroutput>template&lt;typename IArchive &gt; </computeroutput><computeroutput>template&lt;typename Data , int N&gt; </computeroutput><para><computeroutput>void <link linkend="_classUtil_1_1MpiLoader">Util::MpiLoader</link>&lt; IArchive &gt;::load (<link linkend="_classUtil_1_1FArray">FArray</link>&lt; Data, N &gt; &amp; array)</computeroutput></para><para>

<para>Load and broadcast an <link linkend="_classUtil_1_1FArray">FArray</link> &lt;Data , N &gt; object. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>array</entry>
                                <entry>
<para><link linkend="_classUtil_1_1FArray">FArray</link> object to be loaded </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 194 of file MpiLoader.h.</para>
    </section><anchor xml:id="_classUtil_1_1MpiLoader_1a1a2acb9078cc8cd7ac092252a89b46ea"/>    <section>
    <title>load()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>load</primary><secondary>Util::MpiLoader&lt; IArchive &gt;</secondary></indexterm>
<indexterm><primary>Util::MpiLoader&lt; IArchive &gt;</primary><secondary>load</secondary></indexterm>
<computeroutput>template&lt;typename IArchive &gt; </computeroutput><computeroutput>template&lt;typename Data &gt; </computeroutput><para><computeroutput>void <link linkend="_classUtil_1_1MpiLoader">Util::MpiLoader</link>&lt; IArchive &gt;::load (Data * value, int m, int n, int np)</computeroutput></para><para>

<para>Load and broadcast a 2D CArray of Data objects. </para>
</para>

<para>Loads m rows of n elements into array declared as Data array[][np].</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>value</entry>
                                <entry>
<para>pointer to first element or row in array </para>
</entry>
                            </row>
                            <row>
                                <entry>m</entry>
                                <entry>
<para>logical number of rows (1st dimension) </para>
</entry>
                            </row>
                            <row>
                                <entry>n</entry>
                                <entry>
<para>logical number of columns (2nd dimension) </para>
</entry>
                            </row>
                            <row>
                                <entry>np</entry>
                                <entry>
<para>physcial number of columns (elements allocated per row) </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 214 of file MpiLoader.h.</para>
    </section><anchor xml:id="_classUtil_1_1MpiLoader_1a1b747eb6f4c30250ab55c193b39a3d08"/>    <section>
    <title>load()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>load</primary><secondary>Util::MpiLoader&lt; IArchive &gt;</secondary></indexterm>
<indexterm><primary>Util::MpiLoader&lt; IArchive &gt;</primary><secondary>load</secondary></indexterm>
<computeroutput>template&lt;typename IArchive &gt; </computeroutput><computeroutput>template&lt;typename Data &gt; </computeroutput><para><computeroutput>void <link linkend="_classUtil_1_1MpiLoader">Util::MpiLoader</link>&lt; IArchive &gt;::load (<link linkend="_classUtil_1_1DMatrix">DMatrix</link>&lt; Data &gt; &amp; matrix, int m, int n)</computeroutput></para><para>

<para>Load and broadcast a DMatrix&lt;Data&gt; object. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>matrix</entry>
                                <entry>
<para><link linkend="_classUtil_1_1DMatrix">DMatrix</link> object </para>
</entry>
                            </row>
                            <row>
                                <entry>m</entry>
                                <entry>
<para>number of rows (1st dimension) </para>
</entry>
                            </row>
                            <row>
                                <entry>n</entry>
                                <entry>
<para>number of columns (2nd dimension) </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 237 of file MpiLoader.h.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
MpiLoader.h</section>
</section>
