<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classUtil_1_1OptionalLabel">
<title>Util::OptionalLabel Class Reference</title>
<indexterm><primary>Util::OptionalLabel</primary></indexterm>
<para>

<para>An optional <link linkend="_classUtil_1_1Label">Label</link> string in a file format. </para>
 
</para>
<para>
<computeroutput>#include &lt;OptionalLabel.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for Util::OptionalLabel:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classUtil_1_1OptionalLabel.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classUtil_1_1OptionalLabel_1a3a292f9d5581db6bce8c52f7a56dcd92">OptionalLabel</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_classUtil_1_1OptionalLabel_1a4a03e78414978e86e15d824d7f96dfb7">OptionalLabel</link> (std::string <link linkend="_classUtil_1_1Label_1a1ccab72fb358f2ff2ba6346015a8667c">string</link>)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><link linkend="_classUtil_1_1OptionalLabel_1a8e7d95101d59ab49d77845ec48793093">OptionalLabel</link> (const char *<link linkend="_classUtil_1_1Label_1a1ccab72fb358f2ff2ba6346015a8667c">string</link>)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><link linkend="_classUtil_1_1OptionalLabel_1a06d0f21447904cb5ee1967ecad68e9fb">OptionalLabel</link> (const <link linkend="_classUtil_1_1OptionalLabel">OptionalLabel</link> &amp;other)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para>virtual <link linkend="_classUtil_1_1OptionalLabel_1a29ced7e4272066562d97b93752a09a62">~OptionalLabel</link> ()</para>

<para>Destructor. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>An optional <link linkend="_classUtil_1_1Label">Label</link> string in a file format. </para>



<para>A subclass of <link linkend="_classUtil_1_1Label">Label</link> that is always optional. </para>
<para>
Definition at line 23 of file OptionalLabel.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classUtil_1_1OptionalLabel_1a3a292f9d5581db6bce8c52f7a56dcd92"/>    <section>
    <title>OptionalLabel()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>OptionalLabel</primary><secondary>Util::OptionalLabel</secondary></indexterm>
<indexterm><primary>Util::OptionalLabel</primary><secondary>OptionalLabel</secondary></indexterm>
<para><computeroutput>Util::OptionalLabel::OptionalLabel ( )</computeroutput></para><para>

<para>Default constructor. </para>
</para>
<para>
Definition at line 16 of file OptionalLabel.cpp.</para>
    </section><anchor xml:id="_classUtil_1_1OptionalLabel_1a4a03e78414978e86e15d824d7f96dfb7"/>    <section>
    <title>OptionalLabel()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>OptionalLabel</primary><secondary>Util::OptionalLabel</secondary></indexterm>
<indexterm><primary>Util::OptionalLabel</primary><secondary>OptionalLabel</secondary></indexterm>
<para><computeroutput>Util::OptionalLabel::OptionalLabel (std::string string)<computeroutput>[explicit]</computeroutput></computeroutput></para><para>

<para>Constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>string</entry>
                                <entry>
<para>label string that precedes value in file format </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 23 of file OptionalLabel.cpp.</para>
    </section><anchor xml:id="_classUtil_1_1OptionalLabel_1a8e7d95101d59ab49d77845ec48793093"/>    <section>
    <title>OptionalLabel()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>OptionalLabel</primary><secondary>Util::OptionalLabel</secondary></indexterm>
<indexterm><primary>Util::OptionalLabel</primary><secondary>OptionalLabel</secondary></indexterm>
<para><computeroutput>Util::OptionalLabel::OptionalLabel (const char * string)<computeroutput>[explicit]</computeroutput></computeroutput></para><para>

<para>Constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>string</entry>
                                <entry>
<para>label string that precedes value in file format </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 30 of file OptionalLabel.cpp.</para>
    </section><anchor xml:id="_classUtil_1_1OptionalLabel_1a06d0f21447904cb5ee1967ecad68e9fb"/>    <section>
    <title>OptionalLabel()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>OptionalLabel</primary><secondary>Util::OptionalLabel</secondary></indexterm>
<indexterm><primary>Util::OptionalLabel</primary><secondary>OptionalLabel</secondary></indexterm>
<para><computeroutput>Util::OptionalLabel::OptionalLabel (const <link linkend="_classUtil_1_1OptionalLabel">OptionalLabel</link> &amp; other)</computeroutput></para><para>

<para>Copy constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>other</entry>
                                <entry>
<para><link linkend="_classUtil_1_1OptionalLabel">OptionalLabel</link> being cloned. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 37 of file OptionalLabel.cpp.</para>
    </section><anchor xml:id="_classUtil_1_1OptionalLabel_1a29ced7e4272066562d97b93752a09a62"/>    <section>
    <title>~OptionalLabel()</title>
<indexterm><primary>~OptionalLabel</primary><secondary>Util::OptionalLabel</secondary></indexterm>
<indexterm><primary>Util::OptionalLabel</primary><secondary>~OptionalLabel</secondary></indexterm>
<para><computeroutput>Util::OptionalLabel::~OptionalLabel ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Destructor. </para>
</para>
<para>
Definition at line 44 of file OptionalLabel.cpp.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
OptionalLabel.hOptionalLabel.cpp</section>
</section>
