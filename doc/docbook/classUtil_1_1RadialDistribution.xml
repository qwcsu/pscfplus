<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classUtil_1_1RadialDistribution">
<title>Util::RadialDistribution Class Reference</title>
<indexterm><primary>Util::RadialDistribution</primary></indexterm>
<para>

<para><link linkend="_classUtil_1_1Distribution">Distribution</link> (or histogram) of values for particle separations. </para>
 
</para>
<para>
<computeroutput>#include &lt;RadialDistribution.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for Util::RadialDistribution:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classUtil_1_1RadialDistribution.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classUtil_1_1RadialDistribution_1a3f1f0972c4c821178cf2c77f074b2042">RadialDistribution</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_classUtil_1_1RadialDistribution_1ab340fe5b497856dac9078971f396e691">RadialDistribution</link> (const <link linkend="_classUtil_1_1RadialDistribution">RadialDistribution</link> &amp;other)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><link linkend="_classUtil_1_1RadialDistribution">RadialDistribution</link> &amp; <link linkend="_classUtil_1_1RadialDistribution_1a71e8a479731936cffa3193ab29a3102b">operator=</link> (const <link linkend="_classUtil_1_1RadialDistribution">RadialDistribution</link> &amp;other)</para>

<para>Assignment. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_classUtil_1_1RadialDistribution_1a175f764d799d9aaad70fe554ec767514">readParameters</link> (std::istream &amp;in)</para>

<para>Read values of min, max, and nBin from file. </para>
</listitem>
            <listitem><para>void <link linkend="_classUtil_1_1RadialDistribution_1a031728ff725fcaad03325cbdbfb12040">setParam</link> (double <link linkend="_classUtil_1_1Distribution_1af2a8429e8de294dfae3bba969ed90c87">max</link>, int <link linkend="_classUtil_1_1Distribution_1a0002fc72f0667b7be9f7465c3149853a">nBin</link>)</para>

<para>Set parameters and initialize. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_classUtil_1_1RadialDistribution_1a3463af5c9aa4e3742db1ddb04b3e0ee1">loadParameters</link> (<link linkend="_classUtil_1_1Serializable_1ac6bcbf9bac926cada5a398804410e891">Serializable::IArchive</link> &amp;ar)</para>

<para>Load internal state from an archive. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_classUtil_1_1RadialDistribution_1a51fa4e62a87856912ec2d6d9b9cf8cb3">save</link> (<link linkend="_classUtil_1_1Serializable_1aca43a1eea5ec5f13189a57892a7a6d04">Serializable::OArchive</link> &amp;ar)</para>

<para>Save internal state to an archive. </para>
</listitem>
            <listitem><para>template&lt;class Archive &gt; </para><para>void <link linkend="_classUtil_1_1RadialDistribution_1ac551c814d1c4e8b4ecf0e3c439c0df32">serialize</link> (Archive &amp;ar, const unsigned int version)</para>

<para>Serialize this <link linkend="_classUtil_1_1RadialDistribution">RadialDistribution</link> to/from an archive. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_classUtil_1_1RadialDistribution_1afbdd6a2ec8f2601cd5e864eaabbf6ee8">clear</link> ()</para>

<para>Clear all accumulators. </para>
</listitem>
            <listitem><para>void <link linkend="_classUtil_1_1RadialDistribution_1ad97bddb0ec782e2acb0d64c3c02fbcc8">beginSnapshot</link> ()</para>

<para>Mark the beginning of a &quot;snapshot&quot; (i.e., a sampled time step). </para>
</listitem>
            <listitem><para>void <link linkend="_classUtil_1_1RadialDistribution_1a37ebdab74eb0ce3f45d5c7db4edb1126">setNorm</link> (double norm)</para>

<para>Set the factor used to normalize the RDF before output. </para>
</listitem>
            <listitem><para>void <link linkend="_classUtil_1_1RadialDistribution_1a70a74b1fc598c08a2731c02d9c8b74c1">setOutputIntegral</link> (bool outputIntegral)</para>

<para>Set true to enable output of spatial integral of g(r). </para>
</listitem>
            <listitem><para>void <link linkend="_classUtil_1_1RadialDistribution_1aabcebb3e892951e5a10f46a7572f9763">output</link> (std::ostream &amp;out)</para>

<para>Output the distribution to file. </para>
</listitem>
            <listitem><para>long <link linkend="_classUtil_1_1RadialDistribution_1a5e07d559197804b3d67d64df35f81680">nSnapshot</link> ()</para>

<para>Get number of snapshots. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para><link linkend="_classUtil_1_1Distribution">Distribution</link> (or histogram) of values for particle separations. </para>
<para>
Definition at line 21 of file RadialDistribution.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classUtil_1_1RadialDistribution_1a3f1f0972c4c821178cf2c77f074b2042"/>    <section>
    <title>RadialDistribution()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>RadialDistribution</primary><secondary>Util::RadialDistribution</secondary></indexterm>
<indexterm><primary>Util::RadialDistribution</primary><secondary>RadialDistribution</secondary></indexterm>
<para><computeroutput>Util::RadialDistribution::RadialDistribution ( )</computeroutput></para><para>

<para>Default constructor. </para>
</para>
<para>
Definition at line 19 of file RadialDistribution.cpp.</para>
<para>
References Util::ParamComposite::setClassName().</para>
    </section><anchor xml:id="_classUtil_1_1RadialDistribution_1ab340fe5b497856dac9078971f396e691"/>    <section>
    <title>RadialDistribution()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>RadialDistribution</primary><secondary>Util::RadialDistribution</secondary></indexterm>
<indexterm><primary>Util::RadialDistribution</primary><secondary>RadialDistribution</secondary></indexterm>
<para><computeroutput>Util::RadialDistribution::RadialDistribution (const <link linkend="_classUtil_1_1RadialDistribution">RadialDistribution</link> &amp; other)</computeroutput></para><para>

<para>Copy constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>other</entry>
                                <entry>
<para>object to be copied. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 29 of file RadialDistribution.cpp.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classUtil_1_1RadialDistribution_1a71e8a479731936cffa3193ab29a3102b"/>    <section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>Util::RadialDistribution</secondary></indexterm>
<indexterm><primary>Util::RadialDistribution</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_classUtil_1_1RadialDistribution">RadialDistribution</link> &amp; Util::RadialDistribution::operator= (const <link linkend="_classUtil_1_1RadialDistribution">RadialDistribution</link> &amp; other)</computeroutput></para><para>

<para>Assignment. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>other</entry>
                                <entry>
<para>object to be assigned. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 40 of file RadialDistribution.cpp.</para>
<para>
References Util::Distribution::operator=().</para>
    </section><anchor xml:id="_classUtil_1_1RadialDistribution_1a175f764d799d9aaad70fe554ec767514"/>    <section>
    <title>readParameters()</title>
<indexterm><primary>readParameters</primary><secondary>Util::RadialDistribution</secondary></indexterm>
<indexterm><primary>Util::RadialDistribution</primary><secondary>readParameters</secondary></indexterm>
<para><computeroutput>void Util::RadialDistribution::readParameters (std::istream &amp; in)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Read values of min, max, and nBin from file. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in</entry>
                                <entry>
<para>input parameter file stream. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Reimplemented from <link linkend="_classUtil_1_1Distribution_1aa17b76198720c790eb82e679c7a3beb1">Util::Distribution</link>.</para>
<para>
Definition at line 55 of file RadialDistribution.cpp.</para>
<para>
References Util::DArray&lt; Data &gt;::allocate(), Util::Distribution::binWidth_, clear(), Util::Distribution::histogram_, Util::Distribution::max_, Util::Distribution::min_, and Util::Distribution::nBin_.</para>
    </section><anchor xml:id="_classUtil_1_1RadialDistribution_1a031728ff725fcaad03325cbdbfb12040"/>    <section>
    <title>setParam()</title>
<indexterm><primary>setParam</primary><secondary>Util::RadialDistribution</secondary></indexterm>
<indexterm><primary>Util::RadialDistribution</primary><secondary>setParam</secondary></indexterm>
<para><computeroutput>void Util::RadialDistribution::setParam (double max, int nBin)</computeroutput></para><para>

<para>Set parameters and initialize. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>max</entry>
                                <entry>
<para>upper bound of range </para>
</entry>
                            </row>
                            <row>
                                <entry>nBin</entry>
                                <entry>
<para>number of bins in range [min, max] </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 68 of file RadialDistribution.cpp.</para>
<para>
References Util::DArray&lt; Data &gt;::allocate(), Util::Distribution::binWidth_, clear(), Util::Distribution::histogram_, Util::Distribution::max(), Util::Distribution::max_, Util::Distribution::min_, Util::Distribution::nBin(), and Util::Distribution::nBin_.</para>
    </section><anchor xml:id="_classUtil_1_1RadialDistribution_1a3463af5c9aa4e3742db1ddb04b3e0ee1"/>    <section>
    <title>loadParameters()</title>
<indexterm><primary>loadParameters</primary><secondary>Util::RadialDistribution</secondary></indexterm>
<indexterm><primary>Util::RadialDistribution</primary><secondary>loadParameters</secondary></indexterm>
<para><computeroutput>void Util::RadialDistribution::loadParameters (<link linkend="_classUtil_1_1Serializable_1ac6bcbf9bac926cada5a398804410e891">Serializable::IArchive</link> &amp; ar)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Load internal state from an archive. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>ar</entry>
                                <entry>
<para>input/loading archive </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Reimplemented from <link linkend="_classUtil_1_1Distribution_1add46e8d406f9bf6703f4a95bb120d776">Util::Distribution</link>.</para>
<para>
Definition at line 81 of file RadialDistribution.cpp.</para>
<para>
References Util::Distribution::binWidth_, Util::Array&lt; Data &gt;::capacity(), Util::feq(), Util::Distribution::histogram_, Util::Distribution::max_, Util::Distribution::min_, Util::Distribution::nBin_, Util::Distribution::nReject_, Util::Distribution::nSample_, and UTIL_THROW.</para>
    </section><anchor xml:id="_classUtil_1_1RadialDistribution_1a51fa4e62a87856912ec2d6d9b9cf8cb3"/>    <section>
    <title>save()</title>
<indexterm><primary>save</primary><secondary>Util::RadialDistribution</secondary></indexterm>
<indexterm><primary>Util::RadialDistribution</primary><secondary>save</secondary></indexterm>
<para><computeroutput>void Util::RadialDistribution::save (<link linkend="_classUtil_1_1Serializable_1aca43a1eea5ec5f13189a57892a7a6d04">Serializable::OArchive</link> &amp; ar)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Save internal state to an archive. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>ar</entry>
                                <entry>
<para>output/saving archive </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Reimplemented from <link linkend="_classUtil_1_1Distribution_1a7ca406d44ab9c1c6ab2594882196d807">Util::Distribution</link>.</para>
<para>
Definition at line 104 of file RadialDistribution.cpp.</para>
    </section><anchor xml:id="_classUtil_1_1RadialDistribution_1ac551c814d1c4e8b4ecf0e3c439c0df32"/>    <section>
    <title>serialize()</title>
<indexterm><primary>serialize</primary><secondary>Util::RadialDistribution</secondary></indexterm>
<indexterm><primary>Util::RadialDistribution</primary><secondary>serialize</secondary></indexterm>
<computeroutput>template&lt;class Archive &gt; </computeroutput><para><computeroutput>void Util::RadialDistribution::serialize (Archive &amp; ar, const unsigned int version)</computeroutput></para><para>

<para>Serialize this <link linkend="_classUtil_1_1RadialDistribution">RadialDistribution</link> to/from an archive. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>ar</entry>
                                <entry>
<para>input or output archive </para>
</entry>
                            </row>
                            <row>
                                <entry>version</entry>
                                <entry>
<para>file version id </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 160 of file RadialDistribution.h.</para>
<para>
References Util::Distribution::serialize().</para>
    </section><anchor xml:id="_classUtil_1_1RadialDistribution_1afbdd6a2ec8f2601cd5e864eaabbf6ee8"/>    <section>
    <title>clear()</title>
<indexterm><primary>clear</primary><secondary>Util::RadialDistribution</secondary></indexterm>
<indexterm><primary>Util::RadialDistribution</primary><secondary>clear</secondary></indexterm>
<para><computeroutput>void Util::RadialDistribution::clear ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Clear all accumulators. </para>
</para>
<para>
Reimplemented from <link linkend="_classUtil_1_1Distribution_1af001c322b9d0bd565595d8f10800c781">Util::Distribution</link>.</para>
<para>
Definition at line 110 of file RadialDistribution.cpp.</para>
<para>
References Util::Distribution::clear().</para>
<para>
Referenced by readParameters(), and setParam().</para>
    </section><anchor xml:id="_classUtil_1_1RadialDistribution_1ad97bddb0ec782e2acb0d64c3c02fbcc8"/>    <section>
    <title>beginSnapshot()</title>
<indexterm><primary>beginSnapshot</primary><secondary>Util::RadialDistribution</secondary></indexterm>
<indexterm><primary>Util::RadialDistribution</primary><secondary>beginSnapshot</secondary></indexterm>
<para><computeroutput>void Util::RadialDistribution::beginSnapshot ( )</computeroutput></para><para>

<para>Mark the beginning of a &quot;snapshot&quot; (i.e., a sampled time step). </para>
</para>
<para>
Definition at line 125 of file RadialDistribution.cpp.</para>
    </section><anchor xml:id="_classUtil_1_1RadialDistribution_1a37ebdab74eb0ce3f45d5c7db4edb1126"/>    <section>
    <title>setNorm()</title>
<indexterm><primary>setNorm</primary><secondary>Util::RadialDistribution</secondary></indexterm>
<indexterm><primary>Util::RadialDistribution</primary><secondary>setNorm</secondary></indexterm>
<para><computeroutput>void Util::RadialDistribution::setNorm (double norm)</computeroutput></para><para>

<para>Set the factor used to normalize the RDF before output. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>norm</entry>
                                <entry>
<para>normalizing factor </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 119 of file RadialDistribution.cpp.</para>
    </section><anchor xml:id="_classUtil_1_1RadialDistribution_1a70a74b1fc598c08a2731c02d9c8b74c1"/>    <section>
    <title>setOutputIntegral()</title>
<indexterm><primary>setOutputIntegral</primary><secondary>Util::RadialDistribution</secondary></indexterm>
<indexterm><primary>Util::RadialDistribution</primary><secondary>setOutputIntegral</secondary></indexterm>
<para><computeroutput>void Util::RadialDistribution::setOutputIntegral (bool outputIntegral)</computeroutput></para><para>

<para>Set true to enable output of spatial integral of g(r). </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>outputIntegral</entry>
                                <entry>
<para>true to enable output of integral. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 131 of file RadialDistribution.cpp.</para>
    </section><anchor xml:id="_classUtil_1_1RadialDistribution_1aabcebb3e892951e5a10f46a7572f9763"/>    <section>
    <title>output()</title>
<indexterm><primary>output</primary><secondary>Util::RadialDistribution</secondary></indexterm>
<indexterm><primary>Util::RadialDistribution</primary><secondary>output</secondary></indexterm>
<para><computeroutput>void Util::RadialDistribution::output (std::ostream &amp; out)</computeroutput></para><para>

<para>Output the distribution to file. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out</entry>
                                <entry>
<para>pointer to output file </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 137 of file RadialDistribution.cpp.</para>
<para>
References Util::Distribution::binWidth_, Util::Distribution::histogram_, and Util::Distribution::nBin_.</para>
    </section><anchor xml:id="_classUtil_1_1RadialDistribution_1a5e07d559197804b3d67d64df35f81680"/>    <section>
    <title>nSnapshot()</title>
<indexterm><primary>nSnapshot</primary><secondary>Util::RadialDistribution</secondary></indexterm>
<indexterm><primary>Util::RadialDistribution</primary><secondary>nSnapshot</secondary></indexterm>
<para><computeroutput>long Util::RadialDistribution::nSnapshot ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Get number of snapshots. </para>
</para>
<para>
Definition at line 153 of file RadialDistribution.h.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
RadialDistribution.hRadialDistribution.cpp</section>
</section>
