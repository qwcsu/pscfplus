<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classUtil_1_1Timer">
<title>Util::Timer Class Reference</title>
<indexterm><primary>Util::Timer</primary></indexterm>
<para>

<para>Wall clock timer. </para>
 
</para>
<para>
<computeroutput>#include &lt;Timer.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classUtil_1_1Timer_1a4114512a4b5efd15a9e42b0f5d11bd24">Timer</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para>void <link linkend="_classUtil_1_1Timer_1a307f66b72595f093e28787365abf8c77">start</link> (TimePoint begin)</para>

<para>Start timing from an externally supplied time. </para>
</listitem>
            <listitem><para>void <link linkend="_classUtil_1_1Timer_1a764719f9d15f7f600cd321642b327b2b">start</link> ()</para>

<para>Start timing from now (internally computed). </para>
</listitem>
            <listitem><para>void <link linkend="_classUtil_1_1Timer_1ae1884c49bc5f2a21d1b426655247b645">stop</link> (TimePoint end)</para>

<para>Stop the clock at an externally supplied time. </para>
</listitem>
            <listitem><para>void <link linkend="_classUtil_1_1Timer_1a462dc6312e69bbf03e169fff832bd562">stop</link> ()</para>

<para>Stop the clock now (internally supplied). </para>
</listitem>
            <listitem><para>bool <link linkend="_classUtil_1_1Timer_1a3eabd9ebdf0b162158b4b603cbd2ce3e">isRunning</link> ()</para>

<para>Is this <link linkend="_classUtil_1_1Timer">Timer</link> running? </para>
</listitem>
            <listitem><para>void <link linkend="_classUtil_1_1Timer_1a7759ffbb6a675d82f67edcdf1646685c">clear</link> ()</para>

<para>Reset accumulated time to zero. </para>
</listitem>
            <listitem><para>double <link linkend="_classUtil_1_1Timer_1ac411a514744abf68efc18532388c8b0b">time</link> ()</para>

<para>Return the accumulated time, in seconds. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static TimePoint <link linkend="_classUtil_1_1Timer_1a99bbc08d852d7a6ca16ba5c548ed853e">now</link> ()</para>

<para>Return current time point. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Wall clock timer. </para>



<para>A <link linkend="_classUtil_1_1Timer">Timer</link> keeps track of the time elapsed during one or more interval. Each interval begins when <link linkend="_classUtil_1_1Timer_1a764719f9d15f7f600cd321642b327b2b">start()</link> is called and ends when <link linkend="_classUtil_1_1Timer_1a462dc6312e69bbf03e169fff832bd562">stop()</link> is called. If <link linkend="_classUtil_1_1Timer_1a764719f9d15f7f600cd321642b327b2b">start()</link> and <link linkend="_classUtil_1_1Timer_1a462dc6312e69bbf03e169fff832bd562">stop()</link> are invoked repeatedly, the timer accumulates the time elapses in multiple intervals. The accumulated time is returned by the <link linkend="_classUtil_1_1Timer_1ac411a514744abf68efc18532388c8b0b">time()</link> method, and can be reset to zero by the <link linkend="_classUtil_1_1Timer_1a7759ffbb6a675d82f67edcdf1646685c">clear()</link> method. </para>
<para>
Definition at line 34 of file Timer.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classUtil_1_1Timer_1a4114512a4b5efd15a9e42b0f5d11bd24"/>    <section>
    <title>Timer()</title>
<indexterm><primary>Timer</primary><secondary>Util::Timer</secondary></indexterm>
<indexterm><primary>Util::Timer</primary><secondary>Timer</secondary></indexterm>
<para><computeroutput>Util::Timer::Timer ( )</computeroutput></para><para>

<para>Default constructor. </para>
</para>

<para>Constructor. </para>
<para>
Definition at line 16 of file Timer.cpp.</para>
<para>
References clear().</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classUtil_1_1Timer_1a307f66b72595f093e28787365abf8c77"/>    <section>
    <title>start()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>start</primary><secondary>Util::Timer</secondary></indexterm>
<indexterm><primary>Util::Timer</primary><secondary>start</secondary></indexterm>
<para><computeroutput>void Util::Timer::start (TimePoint begin)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Start timing from an externally supplied time. </para>
</para>

<para>Set start time and set isRunning = true.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>begin</entry>
                                <entry>
<para>starting TimePoint. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 134 of file Timer.h.</para>
<para>
References UTIL_THROW.</para>
<para>
Referenced by Pscf::Pspg::Continuous::AmIterator&lt; D &gt;::solve().</para>
    </section><anchor xml:id="_classUtil_1_1Timer_1a764719f9d15f7f600cd321642b327b2b"/>    <section>
    <title>start()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>start</primary><secondary>Util::Timer</secondary></indexterm>
<indexterm><primary>Util::Timer</primary><secondary>start</secondary></indexterm>
<para><computeroutput>void Util::Timer::start ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Start timing from now (internally computed). </para>
</para>

<para>Set start time and set isRunning = true. </para>
<para>
Definition at line 147 of file Timer.h.</para>
<para>
References now(), and UTIL_THROW.</para>
    </section><anchor xml:id="_classUtil_1_1Timer_1ae1884c49bc5f2a21d1b426655247b645"/>    <section>
    <title>stop()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>stop</primary><secondary>Util::Timer</secondary></indexterm>
<indexterm><primary>Util::Timer</primary><secondary>stop</secondary></indexterm>
<para><computeroutput>void Util::Timer::stop (TimePoint end)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Stop the clock at an externally supplied time. </para>
</para>

<para>Increment accumulated time, set isRunning = false. </para>
<para>
Definition at line 159 of file Timer.h.</para>
<para>
References UTIL_THROW.</para>
<para>
Referenced by Pscf::Pspg::Continuous::AmIterator&lt; D &gt;::solve().</para>
    </section><anchor xml:id="_classUtil_1_1Timer_1a462dc6312e69bbf03e169fff832bd562"/>    <section>
    <title>stop()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>stop</primary><secondary>Util::Timer</secondary></indexterm>
<indexterm><primary>Util::Timer</primary><secondary>stop</secondary></indexterm>
<para><computeroutput>void Util::Timer::stop ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Stop the clock now (internally supplied). </para>
</para>

<para>Increment accumulated time, set isRunning = false. </para>
<para>
Definition at line 175 of file Timer.h.</para>
<para>
References now().</para>
    </section><anchor xml:id="_classUtil_1_1Timer_1a3eabd9ebdf0b162158b4b603cbd2ce3e"/>    <section>
    <title>isRunning()</title>
<indexterm><primary>isRunning</primary><secondary>Util::Timer</secondary></indexterm>
<indexterm><primary>Util::Timer</primary><secondary>isRunning</secondary></indexterm>
<para><computeroutput>bool Util::Timer::isRunning ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Is this <link linkend="_classUtil_1_1Timer">Timer</link> running? </para>
</para>
<para>
Definition at line 194 of file Timer.h.</para>
    </section><anchor xml:id="_classUtil_1_1Timer_1a7759ffbb6a675d82f67edcdf1646685c"/>    <section>
    <title>clear()</title>
<indexterm><primary>clear</primary><secondary>Util::Timer</secondary></indexterm>
<indexterm><primary>Util::Timer</primary><secondary>clear</secondary></indexterm>
<para><computeroutput>void Util::Timer::clear ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Reset accumulated time to zero. </para>
</para>
<para>
Definition at line 181 of file Timer.h.</para>
<para>
Referenced by Timer().</para>
    </section><anchor xml:id="_classUtil_1_1Timer_1ac411a514744abf68efc18532388c8b0b"/>    <section>
    <title>time()</title>
<indexterm><primary>time</primary><secondary>Util::Timer</secondary></indexterm>
<indexterm><primary>Util::Timer</primary><secondary>time</secondary></indexterm>
<para><computeroutput>double Util::Timer::time ( )</computeroutput></para><para>

<para>Return the accumulated time, in seconds. </para>
</para>
<para>
Definition at line 23 of file Timer.cpp.</para>
<para>
Referenced by Pscf::Pspg::Continuous::AmIterator&lt; D &gt;::solve().</para>
    </section><anchor xml:id="_classUtil_1_1Timer_1a99bbc08d852d7a6ca16ba5c548ed853e"/>    <section>
    <title>now()</title>
<indexterm><primary>now</primary><secondary>Util::Timer</secondary></indexterm>
<indexterm><primary>Util::Timer</primary><secondary>now</secondary></indexterm>
<para><computeroutput>Timer::TimePoint Util::Timer::now ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Return current time point. </para>
</para>

<para>Return current time point (static function) </para>
<para>
Definition at line 123 of file Timer.h.</para>
<para>
Referenced by Pscf::Pspg::Continuous::AmIterator&lt; D &gt;::solve(), start(), and stop().</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
Timer.hTimer.cpp</section>
</section>
