<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classUtil_1_1XmlAttribute">
<title>Util::XmlAttribute Class Reference</title>
<indexterm><primary>Util::XmlAttribute</primary></indexterm>
<para>

<para>Parser for an XML attribute. </para>
 
</para>
<para>
<computeroutput>#include &lt;XmlAttribute.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for Util::XmlAttribute:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classUtil_1_1XmlAttribute.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classUtil_1_1XmlAttribute_1a20c363478f0983aa13406d0ec5502717">XmlAttribute</link> ()</para>

<para>Constructor. </para>
</listitem>
            <listitem><para>virtual <link linkend="_classUtil_1_1XmlAttribute_1a7ce03fbb8028f37a05b10438a73f8bf0">~XmlAttribute</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para>bool <link linkend="_classUtil_1_1XmlAttribute_1a8c334a0fe631fc95c1b4c9386489f069">match</link> (const std::string &amp;<link linkend="_classUtil_1_1XmlBase_1a8378a6c87659891e9f1e5458dbfc1413">string</link>, int begin)</para>

<para>Return true if an attribute is found, false otherwise. </para>
</listitem>
            <listitem><para>bool <link linkend="_classUtil_1_1XmlAttribute_1a37d82ccba38b43d9759a5267d74fc869">match</link> (<link linkend="_classUtil_1_1XmlBase">XmlBase</link> &amp;parser)</para>

<para>If successful return true and advance cursor or parent parser. </para>
</listitem>
            <listitem><para>const std::string &amp; <link linkend="_classUtil_1_1XmlAttribute_1a5f5d7bb20c77fb07322fc8cf1d5e399d">label</link> ()</para>

<para>Return label string. </para>
</listitem>
            <listitem><para>std::stringstream &amp; <link linkend="_classUtil_1_1XmlAttribute_1aac1b9f77e97f0060ae05340b21fe9680">value</link> ()</para>

<para>Return value string, without quotes. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Parser for an XML attribute. </para>
<para>
Definition at line 23 of file XmlAttribute.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classUtil_1_1XmlAttribute_1a20c363478f0983aa13406d0ec5502717"/>    <section>
    <title>XmlAttribute()</title>
<indexterm><primary>XmlAttribute</primary><secondary>Util::XmlAttribute</secondary></indexterm>
<indexterm><primary>Util::XmlAttribute</primary><secondary>XmlAttribute</secondary></indexterm>
<para><computeroutput>Util::XmlAttribute::XmlAttribute ( )</computeroutput></para><para>

<para>Constructor. </para>
</para>
<para>
Definition at line 14 of file XmlAttribute.cpp.</para>
    </section><anchor xml:id="_classUtil_1_1XmlAttribute_1a7ce03fbb8028f37a05b10438a73f8bf0"/>    <section>
    <title>~XmlAttribute()</title>
<indexterm><primary>~XmlAttribute</primary><secondary>Util::XmlAttribute</secondary></indexterm>
<indexterm><primary>Util::XmlAttribute</primary><secondary>~XmlAttribute</secondary></indexterm>
<para><computeroutput>Util::XmlAttribute::~XmlAttribute ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Destructor. </para>
</para>
<para>
Definition at line 23 of file XmlAttribute.cpp.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classUtil_1_1XmlAttribute_1a8c334a0fe631fc95c1b4c9386489f069"/>    <section>
    <title>match()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>match</primary><secondary>Util::XmlAttribute</secondary></indexterm>
<indexterm><primary>Util::XmlAttribute</primary><secondary>match</secondary></indexterm>
<para><computeroutput>bool Util::XmlAttribute::match (const std::string &amp; string, int begin)</computeroutput></para><para>

<para>Return true if an attribute is found, false otherwise. </para>
</para>
<para>
Definition at line 26 of file XmlAttribute.cpp.</para>
<para>
References Util::XmlBase::c(), Util::XmlBase::cursor(), Util::XmlBase::isEnd(), Util::XmlBase::next(), Util::rStrip(), Util::XmlBase::setString(), Util::XmlBase::skip(), and Util::XmlBase::string().</para>
<para>
Referenced by match(), and Util::XmlStartTag::matchAttribute().</para>
    </section><anchor xml:id="_classUtil_1_1XmlAttribute_1a37d82ccba38b43d9759a5267d74fc869"/>    <section>
    <title>match()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>match</primary><secondary>Util::XmlAttribute</secondary></indexterm>
<indexterm><primary>Util::XmlAttribute</primary><secondary>match</secondary></indexterm>
<para><computeroutput>bool Util::XmlAttribute::match (<link linkend="_classUtil_1_1XmlBase">XmlBase</link> &amp; parser)</computeroutput></para><para>

<para>If successful return true and advance cursor or parent parser. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>parser</entry>
                                <entry>
<para>parent parser object </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 82 of file XmlAttribute.cpp.</para>
<para>
References Util::XmlBase::cursor(), match(), Util::XmlBase::setCursor(), and Util::XmlBase::string().</para>
    </section><anchor xml:id="_classUtil_1_1XmlAttribute_1a5f5d7bb20c77fb07322fc8cf1d5e399d"/>    <section>
    <title>label()</title>
<indexterm><primary>label</primary><secondary>Util::XmlAttribute</secondary></indexterm>
<indexterm><primary>Util::XmlAttribute</primary><secondary>label</secondary></indexterm>
<para><computeroutput>const std::string&amp; Util::XmlAttribute::label ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Return label string. </para>
</para>
<para>
Definition at line 53 of file XmlAttribute.h.</para>
<para>
Referenced by Util::XmlXmlTag::match().</para>
    </section><anchor xml:id="_classUtil_1_1XmlAttribute_1aac1b9f77e97f0060ae05340b21fe9680"/>    <section>
    <title>value()</title>
<indexterm><primary>value</primary><secondary>Util::XmlAttribute</secondary></indexterm>
<indexterm><primary>Util::XmlAttribute</primary><secondary>value</secondary></indexterm>
<para><computeroutput>std::stringstream&amp; Util::XmlAttribute::value ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Return value string, without quotes. </para>
</para>
<para>
Definition at line 59 of file XmlAttribute.h.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
XmlAttribute.hXmlAttribute.cpp</section>
</section>
