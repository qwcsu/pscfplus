<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__Space__Module">
<title>Space (Vector, Tensor)</title>
<indexterm><primary>Space (Vector, Tensor)</primary></indexterm>
<para>

<para>Classes that represent spatial Vectors, Tensors, etc. </para>
 
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classUtil_1_1Grid">Util::Grid</link></para>

<para>A grid of points indexed by integer coordinates. </para>
</listitem>
            <listitem><para>class <link linkend="_classUtil_1_1IntVector">Util::IntVector</link></para>

<para>An <link linkend="_classUtil_1_1IntVector">IntVector</link> is an integer Cartesian vector. </para>
</listitem>
            <listitem><para>class <link linkend="_classUtil_1_1Tensor">Util::Tensor</link></para>

<para>A <link linkend="_classUtil_1_1Tensor">Tensor</link> represents a Cartesian tensor. </para>
</listitem>
            <listitem><para>class <link linkend="_classUtil_1_1Vector">Util::Vector</link></para>

<para>A <link linkend="_classUtil_1_1Vector">Vector</link> is a Cartesian vector. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>const int <link linkend="_group__Space__Module_1ga2772f5ec799816685d37798d8d358ef7">Util::Dimension</link> = 3</para>

<para>Dimensionality of space. </para>
</listitem>
            <listitem><para>const int <link linkend="_group__Space__Module_1gaba1e0e490046919d488d1dc7505d8003">Util::DimensionSq</link> = <link linkend="_group__Space__Module_1ga2772f5ec799816685d37798d8d358ef7">Dimension</link>*<link linkend="_group__Space__Module_1ga2772f5ec799816685d37798d8d358ef7">Dimension</link></para>

<para>Square of Dimensionality of space. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Classes that represent spatial Vectors, Tensors, etc. </para>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_group__Space__Module_1ga2772f5ec799816685d37798d8d358ef7"/>    <section>
    <title>Dimension</title>
<indexterm><primary>Dimension</primary><secondary>Space (Vector, Tensor)</secondary></indexterm>
<indexterm><primary>Space (Vector, Tensor)</primary><secondary>Dimension</secondary></indexterm>
<para><computeroutput>const int Util::Dimension = 3</computeroutput></para><para>

<para>Dimensionality of space. </para>
</para>
<para>
Definition at line 19 of file Dimension.h.</para>
<para>
Referenced by Util::GridArray&lt; Data &gt;::allocate(), Util::SymmTensorAverage::clear(), Util::TensorAverage::clear(), Util::Tensor::commitMpiType(), Util::Grid::dimension(), Pscf::Mesh&lt; D &gt;::dimension(), Util::Tensor::dyad(), Util::Tensor::identity(), Util::Grid::isInGrid(), Util::GridArray&lt; Data &gt;::isInGrid(), Util::SymmTensorAverage::loadParameters(), Util::TensorAverage::loadParameters(), Util::TensorAverage::operator()(), Util::Tensor::operator()(), Util::operator&lt;&lt;(), Util::Tensor::operator=(), Util::operator==(), Util::operator&gt;&gt;(), Util::Vector::operator[](), Util::IntVector::operator[](), Util::Grid::position(), Util::GridArray&lt; Data &gt;::position(), Util::product(), Util::Grid::rank(), Util::SymmTensorAverage::readParameters(), Util::TensorAverage::readParameters(), Util::SymmTensorAverage::sample(), Util::TensorAverage::sample(), Util::SymmTensorAverage::serialize(), Util::TensorAverage::serialize(), Util::Tensor::setColumn(), Util::Grid::setDimensions(), Util::SymmTensorAverage::setNSamplePerBlock(), Util::TensorAverage::setNSamplePerBlock(), Util::Tensor::setRow(), Util::Grid::shift(), Util::GridArray&lt; Data &gt;::shift(), Util::Tensor::symmetrize(), Util::SymmTensorAverage::SymmTensorAverage(), Util::Tensor::Tensor(), Util::TensorAverage::TensorAverage(), Util::Tensor::trace(), and Util::Tensor::transpose().</para>
    </section><anchor xml:id="_group__Space__Module_1gaba1e0e490046919d488d1dc7505d8003"/>    <section>
    <title>DimensionSq</title>
<indexterm><primary>DimensionSq</primary><secondary>Space (Vector, Tensor)</secondary></indexterm>
<indexterm><primary>Space (Vector, Tensor)</primary><secondary>DimensionSq</secondary></indexterm>
<para><computeroutput>const int Util::DimensionSq = <link linkend="_group__Space__Module_1ga2772f5ec799816685d37798d8d358ef7">Dimension</link>*<link linkend="_group__Space__Module_1ga2772f5ec799816685d37798d8d358ef7">Dimension</link></computeroutput></para><para>

<para>Square of Dimensionality of space. </para>
</para>
<para>
Definition at line 26 of file Dimension.h.</para>
<para>
Referenced by Util::Tensor::add(), Util::Tensor::divide(), Util::Tensor::identity(), Util::Tensor::multiply(), Util::Tensor::operator*=(), Util::Tensor::operator+=(), Util::Tensor::operator-=(), Util::Tensor::operator/=(), Util::operator&lt;&lt;(), Util::Tensor::operator=(), Util::operator==(), Util::operator&gt;&gt;(), Util::Tensor::serialize(), Util::Tensor::subtract(), Util::Tensor::Tensor(), and Util::Tensor::zero().</para>
</section>
</section>
</section>
