/*! \page compilation_page  Compilation

\ref install_environment_page (Next)       &nbsp; &nbsp; &nbsp; &nbsp; 
\ref install_page (Up)          &nbsp; &nbsp; &nbsp; &nbsp; 
\ref user_page (Next)  
<BR>

Below are the instructions for compiling the PSCF+ program with examples. 
It is assumed that you have cloned the PSCF+ repository 
and installed all required dependencies, and that the root directory of the 
repository is named ``pscfplus/``. 

Instructions:

   - **Set environment variables:**
     Modify the user's $PATH and $PYTHONPATH Unix environment variables,
     as discussed \ref install_environment_page "here".

   - **Navigate to root directory:**
     Change directory (``cd``) to the ``pscfplus/`` root directory.

   - **Setup:**
     Invoke the "setup" script from the ``pscfplus/`` root directory.  Enter 
     the command
     \code 
     > ./setup
     \endcode
     to setup the build system with default compiler options. Alternatively,
     invoke the setup with a filename argument for non-default compiler
     options.

   - **Change directory to the build directory:**
     Change directory (``cd``) to the ``pscfplus/bld`` subdirectory, by entering
     ``cd bld`` from the root directory.

   - **Compile the PSCF+ program for a given model system:** From ``pscflus/bld``, enter
     \code
     > bash compile.sh [-B CHN] [-N NBP] [-C] [-D] [-K K]  
     \endcode
     This will generate a large number of intermediate object 
     (``*.o``), dependency (``*.d``) and library (``*.a``) files in subdirectories of
     the ``pscfplus/bld`` directory, and install the executables in the ``pscfplus/bin`` directory.
     The options in the above command are as follows:

      - CHN: Specifying the model of chain connectivity 
      (by default it is the continuous Gaussian chain); see 
      <a href="https://github.com/qwcsu/PSCFplus/blob/master/doc/notes/Models.pdf">Models.pdf</a> 
      for details.
      \code 
         DGC: discrete Gaussian chain
         FJC: freely jointed chain
      \endcode
        
      - NBP: Specifying the form of non-bonded pair potential (by default it is the Dirac <i>&delta;</i>-function potential);
      see <a href="https://github.com/qwcsu/PSCFplus/blob/master/doc/notes/Models.pdf">Models.pdf</a> for details.
      \code 
         G: Gaussian potential
         DPD: dissipative particle dynamics potential
         SS: soft-sphere potential
      \endcode

      - ``-C``: Specifying a compressible system 
      (by default the system is incompressible); see 
      <a href="https://github.com/qwcsu/PSCFplus/blob/master/doc/notes/Models.pdf">Models.pdf</a> 
      for details.

      - ``-D``: Specifying the use of discrete cosine transforms between the real and reciprocal space 
      (by default the fast Fourier transforms are used.)

      - ``-K``: Specifying the <i>K</i>-value of the REPS-\e K method 
      (by default the REPS-1 method is used); this is used only for the continuous-Gaussian-chain models
      (see <a href="https://github.com/qwcsu/PSCFplus/blob/master/doc/notes/REPS.pdf">REPS.pdf</a> for details.)

Examples:

- **Compilation for the "standard" model:** 
  To compile PSCF+ for calculations of the “standard” model (<i>i.e.</i>, incompressible melts 
  of continuous Gaussian chains with the Dirac <i>&delta;</i>-function repulsion) using 
  the REPS-1 method and fast Fourier transforms (same as used in PSCF), simply use the following command:
  \code
  bash compile.sh
  \endcode

- **Compilation for the DPDC model:** 
  To compile PSCF+ for calculations of the DPDC model (<i>i.e.</i>, compressible melts of discrete Gaussian 
  chains with the dissipative particle dynamics potential) using fast 
  Fourier transforms, users can use the following command:
  \code
  bash compile.sh -B DGC -C -N DPD
  \endcode

- To get a list of the aboved options, use the following command:
  \code
  bash compile.sh -h
  \endcode
  
<BR>
\ref install_source_page (Prev) &nbsp; &nbsp; &nbsp; &nbsp; 
\ref install_page (Up)          &nbsp; &nbsp; &nbsp; &nbsp; 
\ref user_page (Next)  

*/
