<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classPscf_1_1SpaceSymmetry">
<title>Pscf::SpaceSymmetry&lt; D &gt; Class Template Reference</title>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary></indexterm>
<para>

<para>A <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link> represents a crystallographic space group symmetry. </para>
 
</para>
<para>
<computeroutput>#include &lt;SpaceSymmetry.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="_classUtil_1_1FMatrix">FMatrix</link>&lt; int, D, D &gt; <link linkend="_classPscf_1_1SpaceSymmetry_1a5c81fb3bbe037460580b10be3d0b157c">Rotation</link></para>

<para>Typedef for matrix used to represent point group operation. </para>
</listitem>
            <listitem><para>typedef <link linkend="_classUtil_1_1FArray">FArray</link>&lt; <link linkend="_classUtil_1_1Rational">Rational</link>, D &gt; <link linkend="_classPscf_1_1SpaceSymmetry_1a8039eaaad263a0bea812822a8aab39cf">Translation</link></para>

<para>Typedef for vector used to represent fractional translation. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classPscf_1_1SpaceSymmetry_1adcd82375608edabbd06bce33e8f51b34">SpaceSymmetry</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_classPscf_1_1SpaceSymmetry_1af4dc90df030c6dfe0b6c16c33bb0dcf2">SpaceSymmetry</link> (const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp;other)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp; <link linkend="_classPscf_1_1SpaceSymmetry_1a4e955d6cfd3d0026daaedd6693d38491">operator=</link> (const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp;other)</para>

<para>Assignment operator. </para>
</listitem>
            <listitem><para>void <link linkend="_classPscf_1_1SpaceSymmetry_1a0ef0ce8b6dc8d04c5bef9fbd1061799e">normalize</link> ()</para>

<para>Shift components of translation to [0,1). </para>
</listitem>
            <listitem><para><link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; <link linkend="_classPscf_1_1SpaceSymmetry_1a1e1fc0f2248fee65e13b710a1fcdd892">inverse</link> () const</para>

<para>Compute and return the inverse of this symmetry element. </para>
</listitem>
            <listitem><para><link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt;::<link linkend="_classPscf_1_1SpaceSymmetry_1a5c81fb3bbe037460580b10be3d0b157c">Rotation</link> <link linkend="_classPscf_1_1SpaceSymmetry_1ae4659c473d483641c4020c68cfee7501">inverseRotation</link> () const</para>

<para>Compute and return the inverse of the rotation matrix. </para>
</listitem>
            <listitem><para>int <link linkend="_classPscf_1_1SpaceSymmetry_1a080858281a04a2b7a3a5568c9435dfb3">determinant</link> () const</para>

<para>Compute and return the determinant of the rotation matrix. </para>
</listitem>
            <listitem><para>int &amp; <link linkend="_classPscf_1_1SpaceSymmetry_1aef5a231c54e430b0897f0213353bf1dd">R</link> (int i, int j)</para>

<para>Return an element of the matrix by reference. </para>
</listitem>
            <listitem><para>int <link linkend="_classPscf_1_1SpaceSymmetry_1a45a4bb76076b37b6a95b99a42ac50d51">R</link> (int i, int j) const</para>

<para>Return an element of the matrix by value. </para>
</listitem>
            <listitem><para><link linkend="_classUtil_1_1Rational">Rational</link> &amp; <link linkend="_classPscf_1_1SpaceSymmetry_1a6dfdd8a4e5467c9f2e820d1e3d59bbab">t</link> (int i)</para>

<para>Return a component of the translation by reference. </para>
</listitem>
            <listitem><para><link linkend="_classUtil_1_1Rational">Rational</link> <link linkend="_classPscf_1_1SpaceSymmetry_1ab08e4a19338379a1d2bf991237a8b17d">t</link> (int i) const</para>

<para>Return an element of the translation by value. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp; <link linkend="_classPscf_1_1SpaceSymmetry_1a938118f21b0a4082b9db9cfaa1938ab9">identity</link> ()</para>

<para>Return the identity element. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_classPscf_1_1SpaceSymmetry_1a7a07b5b30b995d487819302119246863">operator==</link> (const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp;A, const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp;B)</para>

<para>Are two <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link> objects equivalent? </para>
</listitem>
            <listitem><para>bool <link linkend="_classPscf_1_1SpaceSymmetry_1a3d66a9bb512d3d0d9902f859fa624538">operator!=</link> (const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp;A, const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp;B)</para>

<para>Are two <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link> objects not equivalent? </para>
</listitem>
            <listitem><para><link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; <link linkend="_classPscf_1_1SpaceSymmetry_1a7b50399eb9e1f6bce0562fbc6a15556b">operator*</link> (const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp;A, const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp;B)</para>

<para>Return the product A*B of two symmetry objects. </para>
</listitem>
            <listitem><para><link linkend="_classPscf_1_1IntVec">IntVec</link>&lt; D &gt; <link linkend="_classPscf_1_1SpaceSymmetry_1a02267499ee86be58dc6dd2711986c9b2">operator*</link> (const <link linkend="_classPscf_1_1IntVec">IntVec</link>&lt; D &gt; &amp;V, const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp;S)</para>

<para>Return the <link linkend="_classPscf_1_1IntVec">IntVec&lt;D&gt;</link> product V*S of an <link linkend="_classPscf_1_1IntVec">IntVec&lt;D&gt;</link> and a rotation matrix. </para>
</listitem>
            <listitem><para><link linkend="_classPscf_1_1IntVec">IntVec</link>&lt; D &gt; <link linkend="_classPscf_1_1SpaceSymmetry_1adc2b544f005f3e82fd9dce45a744987e">operator*</link> (const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp;S, const <link linkend="_classPscf_1_1IntVec">IntVec</link>&lt; D &gt; &amp;V)</para>

<para>Return the <link linkend="_classPscf_1_1IntVec">IntVec&lt;D&gt;</link> product S*V of a rotation matrix and an <link linkend="_classPscf_1_1IntVec">IntVec&lt;D&gt;</link>. </para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_classPscf_1_1SpaceSymmetry_1ac5b25eef4cee7bdbbc43d383913979ad">operator&lt;&lt;</link> (std::ostream &amp;out, const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp;A)</para>

<para>Output stream inserter for a SpaceSymmetry&lt;D&gt; </para>
</listitem>
            <listitem><para>std::istream &amp; <link linkend="_classPscf_1_1SpaceSymmetry_1aa5cd49c4875c9c47eb382bfda1fcd6ff">operator&gt;&gt;</link> (std::istream &amp;in, <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp;A)</para>

<para>Input stream extractor for a SpaceSymmetry&lt;D&gt; </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;int D&gt;
class Pscf::SpaceSymmetry&lt; D &gt;</title></simplesect>


<para>A <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link> represents a crystallographic space group symmetry. </para>



<para>Crystallographic space group symmetry operation combines a point group operation (e.g., 2, 3, and 4 fold rotations about axes, reflections, or inversion) with possible translations by a fraction of a unit cell.</para>

<para>Both the rotation matrix R and the translation t are represented using a basis of Bravais lattice basis vectors. Because Bravais basis vectors must map onto other lattice vectors, this implies that elements of all elements of the rotation matrix must be integers. To guarantee that the inverse of the rotation matrix is also a matrix of integers, we require that the determinant of the rotation matrix must be +1 or -1. The translation vector is represented by a vector of D rational numbers (i.e., fractions) of the form n/m with m = 2, 3, or 4 and n &lt; m.</para>

<para>The basis used to describe a crytallographic group may be either a primitive or non-primitive unit cell. Thus, for example, the space group of a bcc crystal may be expressed either using a basis of 3 three orthogonal simple cubic unit vectors, with a translation t = (1/2, 1/2, 1/2), or as a point group using a set of three non-orthogonal basis vectors for the primitive unit cell. </para>
<para>
Definition at line 23 of file SpaceSymmetry.h.</para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_classPscf_1_1SpaceSymmetry_1a5c81fb3bbe037460580b10be3d0b157c"/>    <section>
    <title>Rotation</title>
<indexterm><primary>Rotation</primary><secondary>Pscf::SpaceSymmetry&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary><secondary>Rotation</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>typedef <link linkend="_classUtil_1_1FMatrix">FMatrix</link>&lt;int, D, D&gt; <link linkend="_classPscf_1_1SpaceSymmetry">Pscf::SpaceSymmetry</link>&lt; D &gt;::<link linkend="_classPscf_1_1SpaceSymmetry_1a5c81fb3bbe037460580b10be3d0b157c">Rotation</link></computeroutput></para><para>

<para>Typedef for matrix used to represent point group operation. </para>
</para>
<para>
Definition at line 143 of file SpaceSymmetry.h.</para>
    </section><anchor xml:id="_classPscf_1_1SpaceSymmetry_1a8039eaaad263a0bea812822a8aab39cf"/>    <section>
    <title>Translation</title>
<indexterm><primary>Translation</primary><secondary>Pscf::SpaceSymmetry&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary><secondary>Translation</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>typedef <link linkend="_classUtil_1_1FArray">FArray</link>&lt;<link linkend="_classUtil_1_1Rational">Rational</link>, D&gt; <link linkend="_classPscf_1_1SpaceSymmetry">Pscf::SpaceSymmetry</link>&lt; D &gt;::<link linkend="_classPscf_1_1SpaceSymmetry_1a8039eaaad263a0bea812822a8aab39cf">Translation</link></computeroutput></para><para>

<para>Typedef for vector used to represent fractional translation. </para>
</para>
<para>
Definition at line 146 of file SpaceSymmetry.h.</para>
</section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classPscf_1_1SpaceSymmetry_1adcd82375608edabbd06bce33e8f51b34"/>    <section>
    <title>SpaceSymmetry()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>SpaceSymmetry</primary><secondary>Pscf::SpaceSymmetry&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary><secondary>SpaceSymmetry</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1SpaceSymmetry">Pscf::SpaceSymmetry</link>&lt; D &gt;::<link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link></computeroutput></para><para>

<para>Default constructor. </para>
</para>

<para>All elements of the rotation matrix are initialized to zero. </para>
<para>
Definition at line 22 of file SpaceSymmetry.tpp.</para>
    </section><anchor xml:id="_classPscf_1_1SpaceSymmetry_1af4dc90df030c6dfe0b6c16c33bb0dcf2"/>    <section>
    <title>SpaceSymmetry()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>SpaceSymmetry</primary><secondary>Pscf::SpaceSymmetry&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary><secondary>SpaceSymmetry</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1SpaceSymmetry">Pscf::SpaceSymmetry</link>&lt; D &gt;::<link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link> (const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp; other)</computeroutput></para><para>

<para>Copy constructor. </para>
</para>
<para>
Definition at line 43 of file SpaceSymmetry.tpp.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classPscf_1_1SpaceSymmetry_1a4e955d6cfd3d0026daaedd6693d38491"/>    <section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>Pscf::SpaceSymmetry&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp; <link linkend="_classPscf_1_1SpaceSymmetry">Pscf::SpaceSymmetry</link>&lt; D &gt;::operator= (const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp; other)</computeroutput></para><para>

<para>Assignment operator. </para>
</para>
<para>
Definition at line 60 of file SpaceSymmetry.tpp.</para>
    </section><anchor xml:id="_classPscf_1_1SpaceSymmetry_1a0ef0ce8b6dc8d04c5bef9fbd1061799e"/>    <section>
    <title>normalize()</title>
<indexterm><primary>normalize</primary><secondary>Pscf::SpaceSymmetry&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary><secondary>normalize</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>void <link linkend="_classPscf_1_1SpaceSymmetry">Pscf::SpaceSymmetry</link>&lt; D &gt;::normalize</computeroutput></para><para>

<para>Shift components of translation to [0,1). </para>
</para>
<para>
Definition at line 79 of file SpaceSymmetry.tpp.</para>
<para>
References UTIL_ASSERT.</para>
<para>
Referenced by Pscf::SpaceSymmetry&lt; D &gt;::inverse(), and Pscf::operator*().</para>
    </section><anchor xml:id="_classPscf_1_1SpaceSymmetry_1a1e1fc0f2248fee65e13b710a1fcdd892"/>    <section>
    <title>inverse()</title>
<indexterm><primary>inverse</primary><secondary>Pscf::SpaceSymmetry&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary><secondary>inverse</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; <link linkend="_classPscf_1_1SpaceSymmetry">Pscf::SpaceSymmetry</link>&lt; D &gt;::inverse</computeroutput></para><para>

<para>Compute and return the inverse of this symmetry element. </para>
</para>
<para>
Definition at line 124 of file SpaceSymmetry.tpp.</para>
<para>
References Pscf::SpaceSymmetry&lt; D &gt;::normalize().</para>
    </section><anchor xml:id="_classPscf_1_1SpaceSymmetry_1ae4659c473d483641c4020c68cfee7501"/>    <section>
    <title>inverseRotation()</title>
<indexterm><primary>inverseRotation</primary><secondary>Pscf::SpaceSymmetry&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary><secondary>inverseRotation</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt;D&gt;::<link linkend="_classPscf_1_1SpaceSymmetry_1a5c81fb3bbe037460580b10be3d0b157c">Rotation</link> <link linkend="_classPscf_1_1SpaceSymmetry">Pscf::SpaceSymmetry</link>&lt; D &gt;::inverseRotation ( ) const</computeroutput></para><para>

<para>Compute and return the inverse of the rotation matrix. </para>
</para>
    </section><anchor xml:id="_classPscf_1_1SpaceSymmetry_1a080858281a04a2b7a3a5568c9435dfb3"/>    <section>
    <title>determinant()</title>
<indexterm><primary>determinant</primary><secondary>Pscf::SpaceSymmetry&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary><secondary>determinant</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>int <link linkend="_classPscf_1_1SpaceSymmetry">Pscf::SpaceSymmetry</link>&lt; D &gt;::determinant ( ) const</computeroutput></para><para>

<para>Compute and return the determinant of the rotation matrix. </para>
</para>
    </section><anchor xml:id="_classPscf_1_1SpaceSymmetry_1aef5a231c54e430b0897f0213353bf1dd"/>    <section>
    <title>R()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>R</primary><secondary>Pscf::SpaceSymmetry&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary><secondary>R</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>int &amp; <link linkend="_classPscf_1_1SpaceSymmetry">Pscf::SpaceSymmetry</link>&lt; D &gt;::R (int i, int j)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Return an element of the matrix by reference. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>i</entry>
                                <entry>
<para>1st (row) index </para>
</entry>
                            </row>
                            <row>
                                <entry>j</entry>
                                <entry>
<para>2nd (column) index </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 313 of file SpaceSymmetry.h.</para>
    </section><anchor xml:id="_classPscf_1_1SpaceSymmetry_1a45a4bb76076b37b6a95b99a42ac50d51"/>    <section>
    <title>R()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>R</primary><secondary>Pscf::SpaceSymmetry&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary><secondary>R</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>int <link linkend="_classPscf_1_1SpaceSymmetry">Pscf::SpaceSymmetry</link>&lt; D &gt;::R (int i, int j) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Return an element of the matrix by value. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>i</entry>
                                <entry>
<para>1st (row) index </para>
</entry>
                            </row>
                            <row>
                                <entry>j</entry>
                                <entry>
<para>2nd (column) index </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 321 of file SpaceSymmetry.h.</para>
    </section><anchor xml:id="_classPscf_1_1SpaceSymmetry_1a6dfdd8a4e5467c9f2e820d1e3d59bbab"/>    <section>
    <title>t()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>t</primary><secondary>Pscf::SpaceSymmetry&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary><secondary>t</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput><link linkend="_classUtil_1_1Rational">Rational</link> &amp; <link linkend="_classPscf_1_1SpaceSymmetry">Pscf::SpaceSymmetry</link>&lt; D &gt;::t (int i)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Return a component of the translation by reference. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>i</entry>
                                <entry>
<para>component index </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 329 of file SpaceSymmetry.h.</para>
    </section><anchor xml:id="_classPscf_1_1SpaceSymmetry_1ab08e4a19338379a1d2bf991237a8b17d"/>    <section>
    <title>t()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>t</primary><secondary>Pscf::SpaceSymmetry&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary><secondary>t</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput><link linkend="_classUtil_1_1Rational">Rational</link> <link linkend="_classPscf_1_1SpaceSymmetry">Pscf::SpaceSymmetry</link>&lt; D &gt;::t (int i) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Return an element of the translation by value. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>i</entry>
                                <entry>
<para>component index </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 337 of file SpaceSymmetry.h.</para>
    </section><anchor xml:id="_classPscf_1_1SpaceSymmetry_1a938118f21b0a4082b9db9cfaa1938ab9"/>    <section>
    <title>identity()</title>
<indexterm><primary>identity</primary><secondary>Pscf::SpaceSymmetry&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary><secondary>identity</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp; <link linkend="_classPscf_1_1SpaceSymmetry">Pscf::SpaceSymmetry</link>&lt; D &gt;::identity<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Return the identity element. </para>
</para>
<para>
Definition at line 345 of file SpaceSymmetry.h.</para>
</section>
</section>
<section>
<title>Friends And Related Function Documentation</title>
<anchor xml:id="_classPscf_1_1SpaceSymmetry_1a7a07b5b30b995d487819302119246863"/>    <section>
    <title>operator==</title>
<indexterm><primary>operator==</primary><secondary>Pscf::SpaceSymmetry&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>bool operator== (const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp; A, const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp; B)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Are two <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link> objects equivalent? </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>A</entry>
                                <entry>
<para>first symmetry </para>
</entry>
                            </row>
                            <row>
                                <entry>B</entry>
                                <entry>
<para>second symmetry </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>True if A == B, false otherwise </para>
</formalpara>
</para>
<para>
Definition at line 357 of file SpaceSymmetry.h.</para>
    </section><anchor xml:id="_classPscf_1_1SpaceSymmetry_1a3d66a9bb512d3d0d9902f859fa624538"/>    <section>
    <title>operator!=</title>
<indexterm><primary>operator!=</primary><secondary>Pscf::SpaceSymmetry&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>bool operator!= (const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp; A, const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp; B)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Are two <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link> objects not equivalent? </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>A</entry>
                                <entry>
<para>first symmetry </para>
</entry>
                            </row>
                            <row>
                                <entry>B</entry>
                                <entry>
<para>second symmetry </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>True if A != B, false otherwise </para>
</formalpara>
</para>
<para>
Definition at line 305 of file SpaceSymmetry.h.</para>
    </section><anchor xml:id="_classPscf_1_1SpaceSymmetry_1a7b50399eb9e1f6bce0562fbc6a15556b"/>    <section>
    <title>operator*<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>Pscf::SpaceSymmetry&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt;D&gt; operator* (const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp; A, const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp; B)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Return the product A*B of two symmetry objects. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>A</entry>
                                <entry>
<para>first symmetry </para>
</entry>
                            </row>
                            <row>
                                <entry>B</entry>
                                <entry>
<para>second symmetry </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>product A*B </para>
</formalpara>
</para>
<para>
Definition at line 378 of file SpaceSymmetry.h.</para>
    </section><anchor xml:id="_classPscf_1_1SpaceSymmetry_1a02267499ee86be58dc6dd2711986c9b2"/>    <section>
    <title>operator*<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>Pscf::SpaceSymmetry&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1IntVec">IntVec</link>&lt;D&gt; operator* (const <link linkend="_classPscf_1_1IntVec">IntVec</link>&lt; D &gt; &amp; V, const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp; S)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Return the <link linkend="_classPscf_1_1IntVec">IntVec&lt;D&gt;</link> product V*S of an <link linkend="_classPscf_1_1IntVec">IntVec&lt;D&gt;</link> and a rotation matrix. </para>
</para>

<para>The product is defined to be the matrix product of the integer vector and the space group rotation matrix S.R * V.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>V</entry>
                                <entry>
<para>integer vector </para>
</entry>
                            </row>
                            <row>
                                <entry>S</entry>
                                <entry>
<para>symmetry operation </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>product V*S </para>
</formalpara>
</para>
<para>
Definition at line 428 of file SpaceSymmetry.h.</para>
    </section><anchor xml:id="_classPscf_1_1SpaceSymmetry_1adc2b544f005f3e82fd9dce45a744987e"/>    <section>
    <title>operator*<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>Pscf::SpaceSymmetry&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput><link linkend="_classPscf_1_1IntVec">IntVec</link>&lt;D&gt; operator* (const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp; S, const <link linkend="_classPscf_1_1IntVec">IntVec</link>&lt; D &gt; &amp; V)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Return the <link linkend="_classPscf_1_1IntVec">IntVec&lt;D&gt;</link> product S*V of a rotation matrix and an <link linkend="_classPscf_1_1IntVec">IntVec&lt;D&gt;</link>. </para>
</para>

<para>The product is defined to be the matrix product of the rotation matrix and the integer vector S.R * V.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>S</entry>
                                <entry>
<para>symmetry operation </para>
</entry>
                            </row>
                            <row>
                                <entry>V</entry>
                                <entry>
<para>integer vector </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>product S*V </para>
</formalpara>
</para>
<para>
Definition at line 411 of file SpaceSymmetry.h.</para>
    </section><anchor xml:id="_classPscf_1_1SpaceSymmetry_1ac5b25eef4cee7bdbbc43d383913979ad"/>    <section>
    <title>operator&lt;&lt;</title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>Pscf::SpaceSymmetry&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>std::ostream&amp; operator&lt;&lt; (std::ostream &amp; out, const <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp; A)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Output stream inserter for a SpaceSymmetry&lt;D&gt; </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out</entry>
                                <entry>
<para>output stream </para>
</entry>
                            </row>
                            <row>
                                <entry>A</entry>
                                <entry>
<para>SpaceSymmetry&lt;D&gt; object to be output </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>modified output stream </para>
</formalpara>
</para>
<para>
Definition at line 445 of file SpaceSymmetry.h.</para>
    </section><anchor xml:id="_classPscf_1_1SpaceSymmetry_1aa5cd49c4875c9c47eb382bfda1fcd6ff"/>    <section>
    <title>operator&gt;&gt;</title>
<indexterm><primary>operator&gt;&gt;</primary><secondary>Pscf::SpaceSymmetry&lt; D &gt;</secondary></indexterm>
<indexterm><primary>Pscf::SpaceSymmetry&lt; D &gt;</primary><secondary>operator&gt;&gt;</secondary></indexterm>
<computeroutput>template&lt;int D&gt; </computeroutput><para><computeroutput>std::istream&amp; operator&gt;&gt; (std::istream &amp; in, <link linkend="_classPscf_1_1SpaceSymmetry">SpaceSymmetry</link>&lt; D &gt; &amp; A)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Input stream extractor for a SpaceSymmetry&lt;D&gt; </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in</entry>
                                <entry>
<para>input stream </para>
</entry>
                            </row>
                            <row>
                                <entry>A</entry>
                                <entry>
<para>SpaceSymmetry&lt;D&gt; object to be input </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>modified input stream </para>
</formalpara>
</para>
<para>
Definition at line 465 of file SpaceSymmetry.h.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
SpaceSymmetry.hSpaceSymmetry.tpp</section>
</section>
