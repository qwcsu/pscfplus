<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classUtil_1_1BinaryFileOArchive">
<title>Util::BinaryFileOArchive Class Reference</title>
<indexterm><primary>Util::BinaryFileOArchive</primary></indexterm>
<para>

<para>Saving / output archive for binary ostream. </para>
 
</para>
<para>
<computeroutput>#include &lt;BinaryFileOArchive.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classUtil_1_1BinaryFileOArchive_1a280d4f53c82d8c7ff276b60cc58fa9e7">BinaryFileOArchive</link> ()</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><link linkend="_classUtil_1_1BinaryFileOArchive_1a6fe66668569572165324075ac82b9812">BinaryFileOArchive</link> (std::string filename)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><link linkend="_classUtil_1_1BinaryFileOArchive_1a3a98d451e9ad2a392cb8031a396683f5">BinaryFileOArchive</link> (std::ofstream &amp;<link linkend="_classUtil_1_1BinaryFileOArchive_1a4de90df67b29bf819f6e790506800fb2">file</link>)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para>virtual <link linkend="_classUtil_1_1BinaryFileOArchive_1a73fb1afe022fb231b4cfc77aec923c5e">~BinaryFileOArchive</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para>std::ofstream &amp; <link linkend="_classUtil_1_1BinaryFileOArchive_1a4de90df67b29bf819f6e790506800fb2">file</link> ()</para>

<para>Get the underlying ifstream by reference. </para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="_classUtil_1_1BinaryFileOArchive">BinaryFileOArchive</link> &amp; <link linkend="_classUtil_1_1BinaryFileOArchive_1a2ae8679536d83fbc67a0983de978dc7b">operator&amp;</link> (T &amp;data)</para>

<para>Save one object. </para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="_classUtil_1_1BinaryFileOArchive">BinaryFileOArchive</link> &amp; <link linkend="_classUtil_1_1BinaryFileOArchive_1a1994999b5de3e8c34e54dc36a6d23472">operator&lt;&lt;</link> (T &amp;data)</para>

<para>Save one object. </para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>void <link linkend="_classUtil_1_1BinaryFileOArchive_1af18370f6931d215e50fcdb04aa314c7f">pack</link> (const T &amp;data)</para>

<para>Pack one object of type T. </para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>void <link linkend="_classUtil_1_1BinaryFileOArchive_1a9b8414af4a0cf5bfbb05e8a4d9dab2d0">pack</link> (const T *array, int n)</para>

<para>Pack a C array. </para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>void <link linkend="_classUtil_1_1BinaryFileOArchive_1a2df5fffcf242519866e3feac212f9b44">pack</link> (const T *array, int m, int n, int np)</para>

<para>Pack a 2D C array. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static bool <link linkend="_classUtil_1_1BinaryFileOArchive_1a682a85851bc6636c3447da5300ec8e01">is_saving</link> ()</para>

<para>Returns true;. </para>
</listitem>
            <listitem><para>static bool <link linkend="_classUtil_1_1BinaryFileOArchive_1a09d21bfa4983dd088bfd3283933d5833">is_loading</link> ()</para>

<para>Returns false;. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Saving / output archive for binary ostream. </para>
<para>
Definition at line 30 of file BinaryFileOArchive.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classUtil_1_1BinaryFileOArchive_1a280d4f53c82d8c7ff276b60cc58fa9e7"/>    <section>
    <title>BinaryFileOArchive()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>BinaryFileOArchive</primary><secondary>Util::BinaryFileOArchive</secondary></indexterm>
<indexterm><primary>Util::BinaryFileOArchive</primary><secondary>BinaryFileOArchive</secondary></indexterm>
<para><computeroutput>Util::BinaryFileOArchive::BinaryFileOArchive ( )</computeroutput></para><para>

<para>Constructor. </para>
</para>
<para>
Definition at line 16 of file BinaryFileOArchive.cpp.</para>
    </section><anchor xml:id="_classUtil_1_1BinaryFileOArchive_1a6fe66668569572165324075ac82b9812"/>    <section>
    <title>BinaryFileOArchive()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>BinaryFileOArchive</primary><secondary>Util::BinaryFileOArchive</secondary></indexterm>
<indexterm><primary>Util::BinaryFileOArchive</primary><secondary>BinaryFileOArchive</secondary></indexterm>
<para><computeroutput>Util::BinaryFileOArchive::BinaryFileOArchive (std::string filename)</computeroutput></para><para>

<para>Constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>filename</entry>
                                <entry>
<para>name of file to open for reading. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 25 of file BinaryFileOArchive.cpp.</para>
    </section><anchor xml:id="_classUtil_1_1BinaryFileOArchive_1a3a98d451e9ad2a392cb8031a396683f5"/>    <section>
    <title>BinaryFileOArchive()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>BinaryFileOArchive</primary><secondary>Util::BinaryFileOArchive</secondary></indexterm>
<indexterm><primary>Util::BinaryFileOArchive</primary><secondary>BinaryFileOArchive</secondary></indexterm>
<para><computeroutput>Util::BinaryFileOArchive::BinaryFileOArchive (std::ofstream &amp; file)</computeroutput></para><para>

<para>Constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>file</entry>
                                <entry>
<para>output file </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 34 of file BinaryFileOArchive.cpp.</para>
    </section><anchor xml:id="_classUtil_1_1BinaryFileOArchive_1a73fb1afe022fb231b4cfc77aec923c5e"/>    <section>
    <title>~BinaryFileOArchive()</title>
<indexterm><primary>~BinaryFileOArchive</primary><secondary>Util::BinaryFileOArchive</secondary></indexterm>
<indexterm><primary>Util::BinaryFileOArchive</primary><secondary>~BinaryFileOArchive</secondary></indexterm>
<para><computeroutput>Util::BinaryFileOArchive::~BinaryFileOArchive ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Destructor. </para>
</para>
<para>
Definition at line 43 of file BinaryFileOArchive.cpp.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classUtil_1_1BinaryFileOArchive_1a682a85851bc6636c3447da5300ec8e01"/>    <section>
    <title>is_saving()</title>
<indexterm><primary>is_saving</primary><secondary>Util::BinaryFileOArchive</secondary></indexterm>
<indexterm><primary>Util::BinaryFileOArchive</primary><secondary>is_saving</secondary></indexterm>
<para><computeroutput>bool Util::BinaryFileOArchive::is_saving ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Returns true;. </para>
</para>
<para>
Definition at line 126 of file BinaryFileOArchive.h.</para>
    </section><anchor xml:id="_classUtil_1_1BinaryFileOArchive_1a09d21bfa4983dd088bfd3283933d5833"/>    <section>
    <title>is_loading()</title>
<indexterm><primary>is_loading</primary><secondary>Util::BinaryFileOArchive</secondary></indexterm>
<indexterm><primary>Util::BinaryFileOArchive</primary><secondary>is_loading</secondary></indexterm>
<para><computeroutput>bool Util::BinaryFileOArchive::is_loading ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Returns false;. </para>
</para>
<para>
Definition at line 129 of file BinaryFileOArchive.h.</para>
    </section><anchor xml:id="_classUtil_1_1BinaryFileOArchive_1a4de90df67b29bf819f6e790506800fb2"/>    <section>
    <title>file()</title>
<indexterm><primary>file</primary><secondary>Util::BinaryFileOArchive</secondary></indexterm>
<indexterm><primary>Util::BinaryFileOArchive</primary><secondary>file</secondary></indexterm>
<para><computeroutput>std::ofstream &amp; Util::BinaryFileOArchive::file ( )</computeroutput></para><para>

<para>Get the underlying ifstream by reference. </para>
</para>
<para>
Definition at line 53 of file BinaryFileOArchive.cpp.</para>
    </section><anchor xml:id="_classUtil_1_1BinaryFileOArchive_1a2ae8679536d83fbc67a0983de978dc7b"/>    <section>
    <title>operator&amp;()</title>
<indexterm><primary>operator&amp;</primary><secondary>Util::BinaryFileOArchive</secondary></indexterm>
<indexterm><primary>Util::BinaryFileOArchive</primary><secondary>operator&amp;</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_classUtil_1_1BinaryFileOArchive">BinaryFileOArchive</link> &amp; Util::BinaryFileOArchive::operator&amp; (T &amp; data)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Save one object. </para>
</para>
<para>
Definition at line 138 of file BinaryFileOArchive.h.</para>
    </section><anchor xml:id="_classUtil_1_1BinaryFileOArchive_1a1994999b5de3e8c34e54dc36a6d23472"/>    <section>
    <title>operator&lt;&lt;()</title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>Util::BinaryFileOArchive</secondary></indexterm>
<indexterm><primary>Util::BinaryFileOArchive</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_classUtil_1_1BinaryFileOArchive">BinaryFileOArchive</link> &amp; Util::BinaryFileOArchive::operator&lt;&lt; (T &amp; data)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Save one object. </para>
</para>
<para>
Definition at line 148 of file BinaryFileOArchive.h.</para>
    </section><anchor xml:id="_classUtil_1_1BinaryFileOArchive_1af18370f6931d215e50fcdb04aa314c7f"/>    <section>
    <title>pack()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>pack</primary><secondary>Util::BinaryFileOArchive</secondary></indexterm>
<indexterm><primary>Util::BinaryFileOArchive</primary><secondary>pack</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>void Util::BinaryFileOArchive::pack (const T &amp; data)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Pack one object of type T. </para>
</para>
<para>
Definition at line 160 of file BinaryFileOArchive.h.</para>
<para>
Referenced by Util::Parameter::saveOptionalCArray(), Util::Parameter::saveOptionalCArray2D(), Util::CArrayParam&lt; Type &gt;::saveValue(), and Util::CArray2DParam&lt; Type &gt;::saveValue().</para>
    </section><anchor xml:id="_classUtil_1_1BinaryFileOArchive_1a9b8414af4a0cf5bfbb05e8a4d9dab2d0"/>    <section>
    <title>pack()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>pack</primary><secondary>Util::BinaryFileOArchive</secondary></indexterm>
<indexterm><primary>Util::BinaryFileOArchive</primary><secondary>pack</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>void Util::BinaryFileOArchive::pack (const T * array, int n)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Pack a C array. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>array</entry>
                                <entry>
<para>address of first element </para>
</entry>
                            </row>
                            <row>
                                <entry>n</entry>
                                <entry>
<para>number of elements </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 167 of file BinaryFileOArchive.h.</para>
    </section><anchor xml:id="_classUtil_1_1BinaryFileOArchive_1a2df5fffcf242519866e3feac212f9b44"/>    <section>
    <title>pack()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>pack</primary><secondary>Util::BinaryFileOArchive</secondary></indexterm>
<indexterm><primary>Util::BinaryFileOArchive</primary><secondary>pack</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>void Util::BinaryFileOArchive::pack (const T * array, int m, int n, int np)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Pack a 2D C array. </para>
</para>

<para>This packs m rows of length n within a 2D C array allocated as array[][np], where np is the physical length of one row.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>array</entry>
                                <entry>
<para>pointer to [0][0] element in 2D array </para>
</entry>
                            </row>
                            <row>
                                <entry>m</entry>
                                <entry>
<para>number of rows </para>
</entry>
                            </row>
                            <row>
                                <entry>n</entry>
                                <entry>
<para>logical number of columns </para>
</entry>
                            </row>
                            <row>
                                <entry>np</entry>
                                <entry>
<para>physical number of columns </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 178 of file BinaryFileOArchive.h.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
BinaryFileOArchive.hBinaryFileOArchive.cpp</section>
</section>
