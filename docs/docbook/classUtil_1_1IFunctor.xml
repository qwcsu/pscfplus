<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classUtil_1_1IFunctor">
<title>Util::IFunctor&lt; T &gt; Class Template Reference</title>
<indexterm><primary>Util::IFunctor&lt; T &gt;</primary></indexterm>
<para>

<para>Interface for functor that wraps a void function with one argument (abstract). </para>
 
</para>
<para>
<computeroutput>#include &lt;IFunctor.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual <link linkend="_classUtil_1_1IFunctor_1acb3d726ed0feed1167fc11adda7d0dc3">~IFunctor</link> ()</para>

<para>Destructor (virtual) </para>
</listitem>
            <listitem><para>virtual void <link linkend="_classUtil_1_1IFunctor_1a0b15fc6e7940ac06573adf9cf6f57f85">operator()</link> (const T &amp;t)=0</para>

<para>Call the associated function. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename T = void&gt;
class Util::IFunctor&lt; T &gt;</title></simplesect>


<para>Interface for functor that wraps a void function with one argument (abstract). </para>



<para>The operator (const T&amp; t ) invokes the associated one-parameter function. </para>
<para>
Definition at line 24 of file IFunctor.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classUtil_1_1IFunctor_1acb3d726ed0feed1167fc11adda7d0dc3"/>    <section>
    <title>~IFunctor()</title>
<indexterm><primary>~IFunctor</primary><secondary>Util::IFunctor&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Util::IFunctor&lt; T &gt;</primary><secondary>~IFunctor</secondary></indexterm>
<computeroutput>template&lt;typename T  = void&gt; </computeroutput><para><computeroutput>virtual <link linkend="_classUtil_1_1IFunctor">Util::IFunctor</link>&lt; T &gt;::~<link linkend="_classUtil_1_1IFunctor">IFunctor</link> ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Destructor (virtual) </para>
</para>
<para>
Definition at line 31 of file IFunctor.h.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classUtil_1_1IFunctor_1a0b15fc6e7940ac06573adf9cf6f57f85"/>    <section>
    <title>operator()()</title>
<indexterm><primary>operator()</primary><secondary>Util::IFunctor&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Util::IFunctor&lt; T &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename T  = void&gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classUtil_1_1IFunctor">Util::IFunctor</link>&lt; T &gt;::operator() (const T &amp; t)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Call the associated function. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>t</entry>
                                <entry>
<para>parameter value passed to associated function. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
IFunctor.h</section>
</section>
