<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classUtil_1_1PArray">
<title>Util::PArray&lt; Data &gt; Class Template Reference</title>
<indexterm><primary>Util::PArray&lt; Data &gt;</primary></indexterm>
<para>

<para>An array that only holds pointers to its elements. </para>
 
</para>
<para>
<computeroutput>#include &lt;PArray.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for Util::PArray&lt; Data &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classUtil_1_1PArray.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual <link linkend="_classUtil_1_1PArray_1a13b3d2f66be701f1e96c5f59649b796b">~PArray</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para>int <link linkend="_classUtil_1_1PArray_1a44168c67b49d4fa54f298097065f7796">capacity</link> () const</para>

<para>Return allocated size. </para>
</listitem>
            <listitem><para>int <link linkend="_classUtil_1_1PArray_1a2b0709ba78b786a7eb4412e817c486b1">size</link> () const</para>

<para>Return logical size. </para>
</listitem>
            <listitem><para>void <link linkend="_classUtil_1_1PArray_1aca74e17f4050e684303a2bf19683c85d">begin</link> (<link linkend="_classUtil_1_1PArrayIterator">PArrayIterator</link>&lt; Data &gt; &amp;iterator) const</para>

<para>Set a <link linkend="_classUtil_1_1PArrayIterator">PArrayIterator</link> to the beginning of this <link linkend="_classUtil_1_1PArray">PArray</link>. </para>
</listitem>
            <listitem><para>void <link linkend="_classUtil_1_1PArray_1a5bbead3784c0b49ef8b43a51ae183cfb">begin</link> (<link linkend="_classUtil_1_1ConstPArrayIterator">ConstPArrayIterator</link>&lt; Data &gt; &amp;iterator) const</para>

<para>Set a <link linkend="_classUtil_1_1ConstPArrayIterator">ConstPArrayIterator</link> to the beginning of this <link linkend="_classUtil_1_1PArray">PArray</link>. </para>
</listitem>
            <listitem><para>Data &amp; <link linkend="_classUtil_1_1PArray_1a79db0e390b8a8ee14d25cd5f9773ba29">operator[]</link> (int i) const</para>

<para>Mimic C array subscripting. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classUtil_1_1PArray_1a7092c57746d9a00c4662b43f23fa42fc">PArray</link> ()</para>

<para>Constructor (protected to prevent instantiation). </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>Data ** <link linkend="_classUtil_1_1PArray_1acfab34be6285e2740fc970f9bbf35b72">ptrs_</link></para>

<para><link linkend="_classUtil_1_1PArray">PArray</link> of of pointers to Data objects. </para>
</listitem>
            <listitem><para>int <link linkend="_classUtil_1_1PArray_1a431a8ea6a39460ec645a8b41ee164e98">capacity_</link></para>

<para>Allocated size of ptrs_ array. </para>
</listitem>
            <listitem><para>int <link linkend="_classUtil_1_1PArray_1a79114c1a91fd84530ea1f833a00c464b">size_</link></para>

<para>Logical size (number of elements with initialized data). </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename Data&gt;
class Util::PArray&lt; Data &gt;</title></simplesect>


<para>An array that only holds pointers to its elements. </para>



<para>A PArray&lt;Data&gt; is an array that is implemented by storing pointers to Data objects, rather than actual Data objects. The array suscript operator [] returns a reference to an associated Data object, as for Array&lt;Data&gt;. A PArray&lt;Data&gt; is not responsible for destroying the associated Data objects.</para>

<para>A <link linkend="_classUtil_1_1PArray">PArray</link> cannot be instantiated, because its constructor is protected. <link linkend="_classUtil_1_1PArray">PArray</link> is a base class for <link linkend="_classUtil_1_1DPArray">DPArray</link> and for <link linkend="_classUtil_1_1ArraySet">ArraySet</link>. </para>
<para>
Definition at line 33 of file PArray.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classUtil_1_1PArray_1a13b3d2f66be701f1e96c5f59649b796b"/>    <section>
    <title>~PArray()</title>
<indexterm><primary>~PArray</primary><secondary>Util::PArray&lt; Data &gt;</secondary></indexterm>
<indexterm><primary>Util::PArray&lt; Data &gt;</primary><secondary>~PArray</secondary></indexterm>
<computeroutput>template&lt;typename Data &gt; </computeroutput><para><computeroutput><link linkend="_classUtil_1_1PArray">Util::PArray</link>&lt; Data &gt;::~<link linkend="_classUtil_1_1PArray">PArray</link><computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Destructor. </para>
</para>
<para>
Definition at line 123 of file PArray.h.</para>
    </section><anchor xml:id="_classUtil_1_1PArray_1a7092c57746d9a00c4662b43f23fa42fc"/>    <section>
    <title>PArray()</title>
<indexterm><primary>PArray</primary><secondary>Util::PArray&lt; Data &gt;</secondary></indexterm>
<indexterm><primary>Util::PArray&lt; Data &gt;</primary><secondary>PArray</secondary></indexterm>
<computeroutput>template&lt;typename Data &gt; </computeroutput><para><computeroutput><link linkend="_classUtil_1_1PArray">Util::PArray</link>&lt; Data &gt;::<link linkend="_classUtil_1_1PArray">PArray</link><computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Constructor (protected to prevent instantiation). </para>
</para>
<para>
Definition at line 113 of file PArray.h.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classUtil_1_1PArray_1a44168c67b49d4fa54f298097065f7796"/>    <section>
    <title>capacity()</title>
<indexterm><primary>capacity</primary><secondary>Util::PArray&lt; Data &gt;</secondary></indexterm>
<indexterm><primary>Util::PArray&lt; Data &gt;</primary><secondary>capacity</secondary></indexterm>
<computeroutput>template&lt;typename Data &gt; </computeroutput><para><computeroutput>int <link linkend="_classUtil_1_1PArray">Util::PArray</link>&lt; Data &gt;::capacity<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Return allocated size. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Number of elements allocated in array. </para>
</formalpara>
</para>
<para>
Definition at line 130 of file PArray.h.</para>
    </section><anchor xml:id="_classUtil_1_1PArray_1a2b0709ba78b786a7eb4412e817c486b1"/>    <section>
    <title>size()</title>
<indexterm><primary>size</primary><secondary>Util::PArray&lt; Data &gt;</secondary></indexterm>
<indexterm><primary>Util::PArray&lt; Data &gt;</primary><secondary>size</secondary></indexterm>
<computeroutput>template&lt;typename Data &gt; </computeroutput><para><computeroutput>int <link linkend="_classUtil_1_1PArray">Util::PArray</link>&lt; Data &gt;::size<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Return logical size. </para>
</para>

<para><formalpara><title>Returns</title>

<para>logical size of this array. </para>
</formalpara>
</para>
<para>
Definition at line 137 of file PArray.h.</para>
    </section><anchor xml:id="_classUtil_1_1PArray_1aca74e17f4050e684303a2bf19683c85d"/>    <section>
    <title>begin()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>begin</primary><secondary>Util::PArray&lt; Data &gt;</secondary></indexterm>
<indexterm><primary>Util::PArray&lt; Data &gt;</primary><secondary>begin</secondary></indexterm>
<computeroutput>template&lt;typename Data &gt; </computeroutput><para><computeroutput>void <link linkend="_classUtil_1_1PArray">Util::PArray</link>&lt; Data &gt;::begin (<link linkend="_classUtil_1_1PArrayIterator">PArrayIterator</link>&lt; Data &gt; &amp; iterator) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Set a <link linkend="_classUtil_1_1PArrayIterator">PArrayIterator</link> to the beginning of this <link linkend="_classUtil_1_1PArray">PArray</link>. </para>
</para>

<para>Set an <link linkend="_classUtil_1_1PArrayIterator">PArrayIterator</link> to the beginning of this <link linkend="_classUtil_1_1PArray">PArray</link>.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>iterator</entry>
                                <entry>
<para><link linkend="_classUtil_1_1PArrayIterator">PArrayIterator</link>, initialized on output. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 146 of file PArray.h.</para>
<para>
References Util::PArrayIterator&lt; Data &gt;::setCurrent(), Util::PArrayIterator&lt; Data &gt;::setEnd(), and Util::PArrayIterator&lt; Data &gt;::setNull().</para>
    </section><anchor xml:id="_classUtil_1_1PArray_1a5bbead3784c0b49ef8b43a51ae183cfb"/>    <section>
    <title>begin()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>begin</primary><secondary>Util::PArray&lt; Data &gt;</secondary></indexterm>
<indexterm><primary>Util::PArray&lt; Data &gt;</primary><secondary>begin</secondary></indexterm>
<computeroutput>template&lt;typename Data &gt; </computeroutput><para><computeroutput>void <link linkend="_classUtil_1_1PArray">Util::PArray</link>&lt; Data &gt;::begin (<link linkend="_classUtil_1_1ConstPArrayIterator">ConstPArrayIterator</link>&lt; Data &gt; &amp; iterator) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Set a <link linkend="_classUtil_1_1ConstPArrayIterator">ConstPArrayIterator</link> to the beginning of this <link linkend="_classUtil_1_1PArray">PArray</link>. </para>
</para>

<para>Set an <link linkend="_classUtil_1_1ConstPArrayIterator">ConstPArrayIterator</link> to the beginning of this <link linkend="_classUtil_1_1PArray">PArray</link>.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>iterator</entry>
                                <entry>
<para><link linkend="_classUtil_1_1PArrayIterator">PArrayIterator</link>, initialized on output.</para>
</entry>
                            </row>
                            <row>
                                <entry>iterator</entry>
                                <entry>
<para><link linkend="_classUtil_1_1ConstPArrayIterator">ConstPArrayIterator</link>, initialized on output. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 162 of file PArray.h.</para>
<para>
References Util::ConstPArrayIterator&lt; Data &gt;::setCurrent(), Util::ConstPArrayIterator&lt; Data &gt;::setEnd(), and Util::ConstPArrayIterator&lt; Data &gt;::setNull().</para>
    </section><anchor xml:id="_classUtil_1_1PArray_1a79db0e390b8a8ee14d25cd5f9773ba29"/>    <section>
    <title>operator[]()</title>
<indexterm><primary>operator[]</primary><secondary>Util::PArray&lt; Data &gt;</secondary></indexterm>
<indexterm><primary>Util::PArray&lt; Data &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;typename Data &gt; </computeroutput><para><computeroutput>Data &amp; <link linkend="_classUtil_1_1PArray">Util::PArray</link>&lt; Data &gt;::operator[] (int i) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Mimic C array subscripting. </para>
</para>

<para>Subscript - return a reference.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>i</entry>
                                <entry>
<para>array index </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>reference to element i </para>
</formalpara>
</para>
<para>
Definition at line 179 of file PArray.h.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classUtil_1_1PArray_1acfab34be6285e2740fc970f9bbf35b72"/>    <section>
    <title>ptrs_</title>
<indexterm><primary>ptrs_</primary><secondary>Util::PArray&lt; Data &gt;</secondary></indexterm>
<indexterm><primary>Util::PArray&lt; Data &gt;</primary><secondary>ptrs_</secondary></indexterm>
<computeroutput>template&lt;typename Data &gt; </computeroutput><para><computeroutput>Data** <link linkend="_classUtil_1_1PArray">Util::PArray</link>&lt; Data &gt;::ptrs_<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para><link linkend="_classUtil_1_1PArray">PArray</link> of of pointers to Data objects. </para>
</para>
<para>
Definition at line 87 of file PArray.h.</para>
<para>
Referenced by Util::DPArray&lt; Data &gt;::DPArray(), Util::GPArray&lt; Data &gt;::GPArray(), and Util::DPArray&lt; Data &gt;::operator=().</para>
    </section><anchor xml:id="_classUtil_1_1PArray_1a431a8ea6a39460ec645a8b41ee164e98"/>    <section>
    <title>capacity_</title>
<indexterm><primary>capacity_</primary><secondary>Util::PArray&lt; Data &gt;</secondary></indexterm>
<indexterm><primary>Util::PArray&lt; Data &gt;</primary><secondary>capacity_</secondary></indexterm>
<computeroutput>template&lt;typename Data &gt; </computeroutput><para><computeroutput>int <link linkend="_classUtil_1_1PArray">Util::PArray</link>&lt; Data &gt;::capacity_<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Allocated size of ptrs_ array. </para>
</para>
<para>
Definition at line 90 of file PArray.h.</para>
<para>
Referenced by Util::DPArray&lt; Data &gt;::DPArray(), and Util::GPArray&lt; Data &gt;::GPArray().</para>
    </section><anchor xml:id="_classUtil_1_1PArray_1a79114c1a91fd84530ea1f833a00c464b"/>    <section>
    <title>size_</title>
<indexterm><primary>size_</primary><secondary>Util::PArray&lt; Data &gt;</secondary></indexterm>
<indexterm><primary>Util::PArray&lt; Data &gt;</primary><secondary>size_</secondary></indexterm>
<computeroutput>template&lt;typename Data &gt; </computeroutput><para><computeroutput>int <link linkend="_classUtil_1_1PArray">Util::PArray</link>&lt; Data &gt;::size_<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Logical size (number of elements with initialized data). </para>
</para>
<para>
Definition at line 93 of file PArray.h.</para>
<para>
Referenced by Util::DPArray&lt; Data &gt;::DPArray(), Util::GPArray&lt; Data &gt;::GPArray(), Util::GPArray&lt; Data &gt;::operator=(), and Util::DPArray&lt; Data &gt;::operator=().</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
PArray.h</section>
</section>
